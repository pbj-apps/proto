// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: heyrenee/v1/patient_service.proto

package v1

import (
	messages "github.com/HeyReneeInc/proto/golang/heyrenee/v1/messages"
	_ "github.com/HeyReneeInc/proto/golang/heyrenee/v1/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for CreatePatientCaregiver.
type CreatePatientCaregiverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PatientCaregiver to create. Required.
	PatientCaregiver *messages.PatientCaregiver `protobuf:"bytes,1,opt,name=patient_caregiver,json=patientCaregiver,proto3" json:"patient_caregiver,omitempty"`
}

func (x *CreatePatientCaregiverRequest) Reset() {
	*x = CreatePatientCaregiverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatientCaregiverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientCaregiverRequest) ProtoMessage() {}

func (x *CreatePatientCaregiverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientCaregiverRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientCaregiverRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePatientCaregiverRequest) GetPatientCaregiver() *messages.PatientCaregiver {
	if x != nil {
		return x.PatientCaregiver
	}
	return nil
}

// Request message for UpdatePatientCaregiver.
type UpdatePatientCaregiverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PatientCaregiver to update. Required.
	PatientCaregiver *messages.PatientCaregiver `protobuf:"bytes,1,opt,name=patient_caregiver,json=patientCaregiver,proto3" json:"patient_caregiver,omitempty"`
}

func (x *UpdatePatientCaregiverRequest) Reset() {
	*x = UpdatePatientCaregiverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePatientCaregiverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePatientCaregiverRequest) ProtoMessage() {}

func (x *UpdatePatientCaregiverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePatientCaregiverRequest.ProtoReflect.Descriptor instead.
func (*UpdatePatientCaregiverRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdatePatientCaregiverRequest) GetPatientCaregiver() *messages.PatientCaregiver {
	if x != nil {
		return x.PatientCaregiver
	}
	return nil
}

// Request message for ListPatientCaregivers.
type ListPatientCaregiversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the Patient to return PatientCaregivers for. Required.
	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *ListPatientCaregiversRequest) Reset() {
	*x = ListPatientCaregiversRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientCaregiversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientCaregiversRequest) ProtoMessage() {}

func (x *ListPatientCaregiversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientCaregiversRequest.ProtoReflect.Descriptor instead.
func (*ListPatientCaregiversRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListPatientCaregiversRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

// Response message for ListPatientCaregivers.
type ListPatientCaregiversResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of PatientCaregivers.
	PatientCaregivers []*messages.PatientCaregiver `protobuf:"bytes,1,rep,name=patient_caregivers,json=patientCaregivers,proto3" json:"patient_caregivers,omitempty"`
}

func (x *ListPatientCaregiversResponse) Reset() {
	*x = ListPatientCaregiversResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientCaregiversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientCaregiversResponse) ProtoMessage() {}

func (x *ListPatientCaregiversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientCaregiversResponse.ProtoReflect.Descriptor instead.
func (*ListPatientCaregiversResponse) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListPatientCaregiversResponse) GetPatientCaregivers() []*messages.PatientCaregiver {
	if x != nil {
		return x.PatientCaregivers
	}
	return nil
}

// Request message for CreatePatientAssessment.
type CreatePatientAssessmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PatientAssessment to create. Required.
	PatientAssessment *messages.PatientAssessment `protobuf:"bytes,1,opt,name=patient_assessment,json=patientAssessment,proto3" json:"patient_assessment,omitempty"`
}

func (x *CreatePatientAssessmentRequest) Reset() {
	*x = CreatePatientAssessmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatientAssessmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientAssessmentRequest) ProtoMessage() {}

func (x *CreatePatientAssessmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientAssessmentRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientAssessmentRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePatientAssessmentRequest) GetPatientAssessment() *messages.PatientAssessment {
	if x != nil {
		return x.PatientAssessment
	}
	return nil
}

// Request message for ListPatientAssessments.
type ListPatientAssessmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the Patient to return PatientAssessments for. Required.
	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *ListPatientAssessmentsRequest) Reset() {
	*x = ListPatientAssessmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientAssessmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientAssessmentsRequest) ProtoMessage() {}

func (x *ListPatientAssessmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientAssessmentsRequest.ProtoReflect.Descriptor instead.
func (*ListPatientAssessmentsRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListPatientAssessmentsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

// Response message for ListPatientAssessments.
type ListPatientAssessmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of PatientAssessments.
	PatientAssessments []*messages.PatientAssessment `protobuf:"bytes,1,rep,name=patient_assessments,json=patientAssessments,proto3" json:"patient_assessments,omitempty"`
}

func (x *ListPatientAssessmentsResponse) Reset() {
	*x = ListPatientAssessmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientAssessmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientAssessmentsResponse) ProtoMessage() {}

func (x *ListPatientAssessmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientAssessmentsResponse.ProtoReflect.Descriptor instead.
func (*ListPatientAssessmentsResponse) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListPatientAssessmentsResponse) GetPatientAssessments() []*messages.PatientAssessment {
	if x != nil {
		return x.PatientAssessments
	}
	return nil
}

// Request message for CreatePatientSatisfactionQuestionnaire.
type CreatePatientSatisfactionQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PatientSatisfactionQuestionnaire to create. Required.
	PatientSatisfactionQuestionnaire *messages.PatientSatisfactionQuestionnaire `protobuf:"bytes,1,opt,name=patient_satisfaction_questionnaire,json=patientSatisfactionQuestionnaire,proto3" json:"patient_satisfaction_questionnaire,omitempty"`
}

func (x *CreatePatientSatisfactionQuestionnaireRequest) Reset() {
	*x = CreatePatientSatisfactionQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatientSatisfactionQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientSatisfactionQuestionnaireRequest) ProtoMessage() {}

func (x *CreatePatientSatisfactionQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientSatisfactionQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientSatisfactionQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePatientSatisfactionQuestionnaireRequest) GetPatientSatisfactionQuestionnaire() *messages.PatientSatisfactionQuestionnaire {
	if x != nil {
		return x.PatientSatisfactionQuestionnaire
	}
	return nil
}

// Request message for ListPatientSatisfactionQuestionnaires.
type ListPatientSatisfactionQuestionnairesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the Patient to return PatientSatisfactionQuestionnaires for. Required.
	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *ListPatientSatisfactionQuestionnairesRequest) Reset() {
	*x = ListPatientSatisfactionQuestionnairesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientSatisfactionQuestionnairesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientSatisfactionQuestionnairesRequest) ProtoMessage() {}

func (x *ListPatientSatisfactionQuestionnairesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientSatisfactionQuestionnairesRequest.ProtoReflect.Descriptor instead.
func (*ListPatientSatisfactionQuestionnairesRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListPatientSatisfactionQuestionnairesRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

// Response message for ListPatientSatisfactionQuestionnaires.
type ListPatientSatisfactionQuestionnairesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of PatientSatisfactionQuestionnaires.
	PatientSatisfactionQuestionnaires []*messages.PatientSatisfactionQuestionnaire `protobuf:"bytes,1,rep,name=patient_satisfaction_questionnaires,json=patientSatisfactionQuestionnaires,proto3" json:"patient_satisfaction_questionnaires,omitempty"`
}

func (x *ListPatientSatisfactionQuestionnairesResponse) Reset() {
	*x = ListPatientSatisfactionQuestionnairesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientSatisfactionQuestionnairesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientSatisfactionQuestionnairesResponse) ProtoMessage() {}

func (x *ListPatientSatisfactionQuestionnairesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientSatisfactionQuestionnairesResponse.ProtoReflect.Descriptor instead.
func (*ListPatientSatisfactionQuestionnairesResponse) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListPatientSatisfactionQuestionnairesResponse) GetPatientSatisfactionQuestionnaires() []*messages.PatientSatisfactionQuestionnaire {
	if x != nil {
		return x.PatientSatisfactionQuestionnaires
	}
	return nil
}

// Request message for CreatePatientHealthQuestionnaire.
type CreatePatientHealthQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PatientHealthQuestionnaire to create. Required.
	PatientHealthQuestionnaire *messages.PatientHealthQuestionnaire `protobuf:"bytes,1,opt,name=patient_health_questionnaire,json=patientHealthQuestionnaire,proto3" json:"patient_health_questionnaire,omitempty"`
}

func (x *CreatePatientHealthQuestionnaireRequest) Reset() {
	*x = CreatePatientHealthQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatientHealthQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientHealthQuestionnaireRequest) ProtoMessage() {}

func (x *CreatePatientHealthQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientHealthQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientHealthQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePatientHealthQuestionnaireRequest) GetPatientHealthQuestionnaire() *messages.PatientHealthQuestionnaire {
	if x != nil {
		return x.PatientHealthQuestionnaire
	}
	return nil
}

// Request message for ListPatientHealthQuestionnaires.
type ListPatientHealthQuestionnairesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the Patient to return PatientHealthQuestionnaires for. Required.
	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *ListPatientHealthQuestionnairesRequest) Reset() {
	*x = ListPatientHealthQuestionnairesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientHealthQuestionnairesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientHealthQuestionnairesRequest) ProtoMessage() {}

func (x *ListPatientHealthQuestionnairesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientHealthQuestionnairesRequest.ProtoReflect.Descriptor instead.
func (*ListPatientHealthQuestionnairesRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListPatientHealthQuestionnairesRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

// Response message for ListPatientHealthQuestionnaires.
type ListPatientHealthQuestionnairesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of PatientHealthQuestionnaires.
	PatientHealthQuestionnaires []*messages.PatientHealthQuestionnaire `protobuf:"bytes,1,rep,name=patient_health_questionnaires,json=patientHealthQuestionnaires,proto3" json:"patient_health_questionnaires,omitempty"`
}

func (x *ListPatientHealthQuestionnairesResponse) Reset() {
	*x = ListPatientHealthQuestionnairesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientHealthQuestionnairesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientHealthQuestionnairesResponse) ProtoMessage() {}

func (x *ListPatientHealthQuestionnairesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientHealthQuestionnairesResponse.ProtoReflect.Descriptor instead.
func (*ListPatientHealthQuestionnairesResponse) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListPatientHealthQuestionnairesResponse) GetPatientHealthQuestionnaires() []*messages.PatientHealthQuestionnaire {
	if x != nil {
		return x.PatientHealthQuestionnaires
	}
	return nil
}

// Request message for CreatePatientSdohQuestionnaire.
type CreatePatientSdohQuestionnaireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The PatientSdohQuestionnaire to create. Required.
	PatientSdohQuestionnaire *messages.PatientSdohQuestionnaire `protobuf:"bytes,1,opt,name=patient_sdoh_questionnaire,json=patientSdohQuestionnaire,proto3" json:"patient_sdoh_questionnaire,omitempty"`
}

func (x *CreatePatientSdohQuestionnaireRequest) Reset() {
	*x = CreatePatientSdohQuestionnaireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatientSdohQuestionnaireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientSdohQuestionnaireRequest) ProtoMessage() {}

func (x *CreatePatientSdohQuestionnaireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientSdohQuestionnaireRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientSdohQuestionnaireRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreatePatientSdohQuestionnaireRequest) GetPatientSdohQuestionnaire() *messages.PatientSdohQuestionnaire {
	if x != nil {
		return x.PatientSdohQuestionnaire
	}
	return nil
}

// Request message for ListPatientSdohQuestionnaires.
type ListPatientSdohQuestionnairesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the Patient to return PatientSdohQuestionnaires for. Required.
	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *ListPatientSdohQuestionnairesRequest) Reset() {
	*x = ListPatientSdohQuestionnairesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientSdohQuestionnairesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientSdohQuestionnairesRequest) ProtoMessage() {}

func (x *ListPatientSdohQuestionnairesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientSdohQuestionnairesRequest.ProtoReflect.Descriptor instead.
func (*ListPatientSdohQuestionnairesRequest) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListPatientSdohQuestionnairesRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

// Response message for ListPatientSdohQuestionnaires.
type ListPatientSdohQuestionnairesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of PatientSdohQuestionnaires.
	PatientSdohQuestionnaires []*messages.PatientSdohQuestionnaire `protobuf:"bytes,1,rep,name=patient_sdoh_questionnaires,json=patientSdohQuestionnaires,proto3" json:"patient_sdoh_questionnaires,omitempty"`
}

func (x *ListPatientSdohQuestionnairesResponse) Reset() {
	*x = ListPatientSdohQuestionnairesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_patient_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPatientSdohQuestionnairesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientSdohQuestionnairesResponse) ProtoMessage() {}

func (x *ListPatientSdohQuestionnairesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_patient_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientSdohQuestionnairesResponse.ProtoReflect.Descriptor instead.
func (*ListPatientSdohQuestionnairesResponse) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_patient_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListPatientSdohQuestionnairesResponse) GetPatientSdohQuestionnaires() []*messages.PatientSdohQuestionnaire {
	if x != nil {
		return x.PatientSdohQuestionnaires
	}
	return nil
}

var File_heyrenee_v1_patient_service_proto protoreflect.FileDescriptor

var file_heyrenee_v1_patient_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x2c, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37,
	0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x64, 0x6f, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x68,
	0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x68, 0x65,
	0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72,
	0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x11, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65,
	0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x10, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76,
	0x65, 0x72, 0x22, 0x74, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x11, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72,
	0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x52, 0x10, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xb5,
	0x18, 0x01, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x76, 0x0a,
	0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65,
	0x67, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x12, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x67, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x65, 0x79,
	0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x11, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0x78, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x44, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xb6, 0x01, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x22, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x20, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x22, 0x53, 0x0a, 0x2c, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xb8, 0x01, 0x0a, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x86, 0x01, 0x0a, 0x23, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61,
	0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61,
	0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x21, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x27, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x1c, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68,
	0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x1a,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x22, 0x4d, 0x0a, 0x26, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x09,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x27, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x1d, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68,
	0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x1b,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x25,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f,
	0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x1a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x64, 0x6f, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x65, 0x79, 0x72,
	0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x18, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x22, 0x4b, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x97, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1b, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x64, 0x6f, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x64,
	0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52,
	0x19, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x32, 0xc2, 0x0b, 0x0a, 0x0e, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x22, 0x00, 0x12, 0x6e, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65,
	0x67, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x65, 0x67, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x65, 0x67,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x71, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x68, 0x65, 0x79,
	0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x68,
	0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65,
	0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x12, 0x3a, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61,
	0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74,
	0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x73, 0x12, 0x39, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69,
	0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x12, 0x34, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x12, 0x33,
	0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x1e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f,
	0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x32,
	0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69,
	0x72, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x6e, 0x61, 0x69, 0x72, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x68, 0x65, 0x79, 0x72,
	0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x64, 0x6f, 0x68, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x48, 0x65,
	0x79, 0x52, 0x65, 0x6e, 0x65, 0x65, 0x49, 0x6e, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_heyrenee_v1_patient_service_proto_rawDescOnce sync.Once
	file_heyrenee_v1_patient_service_proto_rawDescData = file_heyrenee_v1_patient_service_proto_rawDesc
)

func file_heyrenee_v1_patient_service_proto_rawDescGZIP() []byte {
	file_heyrenee_v1_patient_service_proto_rawDescOnce.Do(func() {
		file_heyrenee_v1_patient_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyrenee_v1_patient_service_proto_rawDescData)
	})
	return file_heyrenee_v1_patient_service_proto_rawDescData
}

var file_heyrenee_v1_patient_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_heyrenee_v1_patient_service_proto_goTypes = []interface{}{
	(*CreatePatientCaregiverRequest)(nil),                 // 0: heyrenee.v1.CreatePatientCaregiverRequest
	(*UpdatePatientCaregiverRequest)(nil),                 // 1: heyrenee.v1.UpdatePatientCaregiverRequest
	(*ListPatientCaregiversRequest)(nil),                  // 2: heyrenee.v1.ListPatientCaregiversRequest
	(*ListPatientCaregiversResponse)(nil),                 // 3: heyrenee.v1.ListPatientCaregiversResponse
	(*CreatePatientAssessmentRequest)(nil),                // 4: heyrenee.v1.CreatePatientAssessmentRequest
	(*ListPatientAssessmentsRequest)(nil),                 // 5: heyrenee.v1.ListPatientAssessmentsRequest
	(*ListPatientAssessmentsResponse)(nil),                // 6: heyrenee.v1.ListPatientAssessmentsResponse
	(*CreatePatientSatisfactionQuestionnaireRequest)(nil), // 7: heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest
	(*ListPatientSatisfactionQuestionnairesRequest)(nil),  // 8: heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest
	(*ListPatientSatisfactionQuestionnairesResponse)(nil), // 9: heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse
	(*CreatePatientHealthQuestionnaireRequest)(nil),       // 10: heyrenee.v1.CreatePatientHealthQuestionnaireRequest
	(*ListPatientHealthQuestionnairesRequest)(nil),        // 11: heyrenee.v1.ListPatientHealthQuestionnairesRequest
	(*ListPatientHealthQuestionnairesResponse)(nil),       // 12: heyrenee.v1.ListPatientHealthQuestionnairesResponse
	(*CreatePatientSdohQuestionnaireRequest)(nil),         // 13: heyrenee.v1.CreatePatientSdohQuestionnaireRequest
	(*ListPatientSdohQuestionnairesRequest)(nil),          // 14: heyrenee.v1.ListPatientSdohQuestionnairesRequest
	(*ListPatientSdohQuestionnairesResponse)(nil),         // 15: heyrenee.v1.ListPatientSdohQuestionnairesResponse
	(*messages.PatientCaregiver)(nil),                     // 16: heyrenee.v1.messages.PatientCaregiver
	(*messages.PatientAssessment)(nil),                    // 17: heyrenee.v1.messages.PatientAssessment
	(*messages.PatientSatisfactionQuestionnaire)(nil),     // 18: heyrenee.v1.messages.PatientSatisfactionQuestionnaire
	(*messages.PatientHealthQuestionnaire)(nil),           // 19: heyrenee.v1.messages.PatientHealthQuestionnaire
	(*messages.PatientSdohQuestionnaire)(nil),             // 20: heyrenee.v1.messages.PatientSdohQuestionnaire
}
var file_heyrenee_v1_patient_service_proto_depIdxs = []int32{
	16, // 0: heyrenee.v1.CreatePatientCaregiverRequest.patient_caregiver:type_name -> heyrenee.v1.messages.PatientCaregiver
	16, // 1: heyrenee.v1.UpdatePatientCaregiverRequest.patient_caregiver:type_name -> heyrenee.v1.messages.PatientCaregiver
	16, // 2: heyrenee.v1.ListPatientCaregiversResponse.patient_caregivers:type_name -> heyrenee.v1.messages.PatientCaregiver
	17, // 3: heyrenee.v1.CreatePatientAssessmentRequest.patient_assessment:type_name -> heyrenee.v1.messages.PatientAssessment
	17, // 4: heyrenee.v1.ListPatientAssessmentsResponse.patient_assessments:type_name -> heyrenee.v1.messages.PatientAssessment
	18, // 5: heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.patient_satisfaction_questionnaire:type_name -> heyrenee.v1.messages.PatientSatisfactionQuestionnaire
	18, // 6: heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.patient_satisfaction_questionnaires:type_name -> heyrenee.v1.messages.PatientSatisfactionQuestionnaire
	19, // 7: heyrenee.v1.CreatePatientHealthQuestionnaireRequest.patient_health_questionnaire:type_name -> heyrenee.v1.messages.PatientHealthQuestionnaire
	19, // 8: heyrenee.v1.ListPatientHealthQuestionnairesResponse.patient_health_questionnaires:type_name -> heyrenee.v1.messages.PatientHealthQuestionnaire
	20, // 9: heyrenee.v1.CreatePatientSdohQuestionnaireRequest.patient_sdoh_questionnaire:type_name -> heyrenee.v1.messages.PatientSdohQuestionnaire
	20, // 10: heyrenee.v1.ListPatientSdohQuestionnairesResponse.patient_sdoh_questionnaires:type_name -> heyrenee.v1.messages.PatientSdohQuestionnaire
	0,  // 11: heyrenee.v1.PatientService.CreatePatientCaregiver:input_type -> heyrenee.v1.CreatePatientCaregiverRequest
	1,  // 12: heyrenee.v1.PatientService.UpdatePatientCaregiver:input_type -> heyrenee.v1.UpdatePatientCaregiverRequest
	2,  // 13: heyrenee.v1.PatientService.ListPatientCaregivers:input_type -> heyrenee.v1.ListPatientCaregiversRequest
	4,  // 14: heyrenee.v1.PatientService.CreatePatientAssessment:input_type -> heyrenee.v1.CreatePatientAssessmentRequest
	5,  // 15: heyrenee.v1.PatientService.ListPatientAssessments:input_type -> heyrenee.v1.ListPatientAssessmentsRequest
	7,  // 16: heyrenee.v1.PatientService.CreatePatientSatisfactionQuestionnaire:input_type -> heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest
	8,  // 17: heyrenee.v1.PatientService.ListPatientSatisfactionQuestionnaires:input_type -> heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest
	10, // 18: heyrenee.v1.PatientService.CreatePatientHealthQuestionnaire:input_type -> heyrenee.v1.CreatePatientHealthQuestionnaireRequest
	11, // 19: heyrenee.v1.PatientService.ListPatientHealthQuestionnaires:input_type -> heyrenee.v1.ListPatientHealthQuestionnairesRequest
	13, // 20: heyrenee.v1.PatientService.CreatePatientSdohQuestionnaire:input_type -> heyrenee.v1.CreatePatientSdohQuestionnaireRequest
	14, // 21: heyrenee.v1.PatientService.ListPatientSdohQuestionnaires:input_type -> heyrenee.v1.ListPatientSdohQuestionnairesRequest
	16, // 22: heyrenee.v1.PatientService.CreatePatientCaregiver:output_type -> heyrenee.v1.messages.PatientCaregiver
	16, // 23: heyrenee.v1.PatientService.UpdatePatientCaregiver:output_type -> heyrenee.v1.messages.PatientCaregiver
	3,  // 24: heyrenee.v1.PatientService.ListPatientCaregivers:output_type -> heyrenee.v1.ListPatientCaregiversResponse
	17, // 25: heyrenee.v1.PatientService.CreatePatientAssessment:output_type -> heyrenee.v1.messages.PatientAssessment
	6,  // 26: heyrenee.v1.PatientService.ListPatientAssessments:output_type -> heyrenee.v1.ListPatientAssessmentsResponse
	18, // 27: heyrenee.v1.PatientService.CreatePatientSatisfactionQuestionnaire:output_type -> heyrenee.v1.messages.PatientSatisfactionQuestionnaire
	9,  // 28: heyrenee.v1.PatientService.ListPatientSatisfactionQuestionnaires:output_type -> heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse
	19, // 29: heyrenee.v1.PatientService.CreatePatientHealthQuestionnaire:output_type -> heyrenee.v1.messages.PatientHealthQuestionnaire
	12, // 30: heyrenee.v1.PatientService.ListPatientHealthQuestionnaires:output_type -> heyrenee.v1.ListPatientHealthQuestionnairesResponse
	20, // 31: heyrenee.v1.PatientService.CreatePatientSdohQuestionnaire:output_type -> heyrenee.v1.messages.PatientSdohQuestionnaire
	15, // 32: heyrenee.v1.PatientService.ListPatientSdohQuestionnaires:output_type -> heyrenee.v1.ListPatientSdohQuestionnairesResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_heyrenee_v1_patient_service_proto_init() }
func file_heyrenee_v1_patient_service_proto_init() {
	if File_heyrenee_v1_patient_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_heyrenee_v1_patient_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatientCaregiverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePatientCaregiverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientCaregiversRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientCaregiversResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatientAssessmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientAssessmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientAssessmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatientSatisfactionQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientSatisfactionQuestionnairesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientSatisfactionQuestionnairesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatientHealthQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientHealthQuestionnairesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientHealthQuestionnairesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatientSdohQuestionnaireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientSdohQuestionnairesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyrenee_v1_patient_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPatientSdohQuestionnairesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyrenee_v1_patient_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_heyrenee_v1_patient_service_proto_goTypes,
		DependencyIndexes: file_heyrenee_v1_patient_service_proto_depIdxs,
		MessageInfos:      file_heyrenee_v1_patient_service_proto_msgTypes,
	}.Build()
	File_heyrenee_v1_patient_service_proto = out.File
	file_heyrenee_v1_patient_service_proto_rawDesc = nil
	file_heyrenee_v1_patient_service_proto_goTypes = nil
	file_heyrenee_v1_patient_service_proto_depIdxs = nil
}
