// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: heyrenee/v1/messages/medication.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A Medication represents a distinct and unique medication
type Medication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the Medication..
	MedicationId string `protobuf:"bytes,1,opt,name=medication_id,json=medicationId,proto3" json:"medication_id,omitempty"`
	// The RxNorm unique identifier for the clinical drug, which can be one of the following term types:
	//    - Semantic Clinical Drug (SCD) e.g. azithromycin 250 MG Oral Capsule.
	//    - Semantic Branded Drug (SBD) e.g. azithromycin 250 MG Oral Capsule [Zithromax].
	//    - Generic Pack (GPCK) e.g. {6 (azithromycin 250 MG Oral Tablet) } Pack
	//    - Branded Pack (BPCK) e.g. {6 (azithromycin 250 MG Oral Tablet [Zithromax]) } Pack [Z-PAKS].
	Rxcui string `protobuf:"bytes,2,opt,name=rxcui,proto3" json:"rxcui,omitempty"`
	// The corresponding generic clinical drug.
	GenericRxcui string `protobuf:"bytes,3,opt,name=generic_rxcui,json=genericRxcui,proto3" json:"generic_rxcui,omitempty"`
	// The term type in RxNorm.
	TermType string `protobuf:"bytes,4,opt,name=term_type,json=termType,proto3" json:"term_type,omitempty"`
	// The full RxNorm name of the clinical drug.
	FullName string `protobuf:"bytes,5,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// Dose form and intended route information from RxNorm.
	RxNormDoseForm string `protobuf:"bytes,6,opt,name=rx_norm_dose_form,json=rxNormDoseForm,proto3" json:"rx_norm_dose_form,omitempty"`
	// The generic part of the full RxNorm name.
	FullGenericName string `protobuf:"bytes,7,opt,name=full_generic_name,json=fullGenericName,proto3" json:"full_generic_name,omitempty"`
	// The brand name part of the full RxNorm name.
	BrandName string `protobuf:"bytes,8,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	// Drug name (either generic or brand name) and intended route e.g. INDERAL (Oral-pill).
	DisplayName string `protobuf:"bytes,9,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Intended route derived from RXN_DOSE_FORM.
	Route string `protobuf:"bytes,10,opt,name=route,proto3" json:"route,omitempty"`
	// Dose form derived from RXN_DOSE_FORM.
	NewDoseForm string `protobuf:"bytes,11,opt,name=new_dose_form,json=newDoseForm,proto3" json:"new_dose_form,omitempty"`
	// Strength information parsed from the RxNorm full name.
	Strength string `protobuf:"bytes,12,opt,name=strength,proto3" json:"strength,omitempty"`
	// To flag drug names deemed not likely to be useful for data entry. For example, long generic drug names with multiple
	// ingredients (e.g. Bacitracin/Hydrocortisone/Neomycin/Polymyxin B) are suppressed because they are almost always
	// prescribed by their brand names (e.g. CORTISPORIN OINTMENT). Any non-empty value means that a row should be suppressed.
	SuppressFor string `protobuf:"bytes,13,opt,name=suppress_for,json=suppressFor,proto3" json:"suppress_for,omitempty"`
	// Commonly used synonyms or abbreviations for the drug e.g. MOM for Milk of Magnesia.
	DisplayNameSynonym []string `protobuf:"bytes,14,rep,name=display_name_synonym,json=displayNameSynonym,proto3" json:"display_name_synonym,omitempty"`
	// The RxNorm unique identifier for the entity represented by the DISPLAY_NAME (drug + intended route). The
	// corresponding TTY (term type) in RxNorm is either SCDG (Semantic Clinical Doseform Group) or SBDG (Semantic Branded
	// Doseform Group), as represented in the field SXDG_TTY.
	SxdgRxcui string `protobuf:"bytes,15,opt,name=sxdg_rxcui,json=sxdgRxcui,proto3" json:"sxdg_rxcui,omitempty"`
	// The RxNorm TTY of the semantic doseform group.
	SxdgTermType string `protobuf:"bytes,16,opt,name=sxdg_term_type,json=sxdgTermType,proto3" json:"sxdg_term_type,omitempty"`
	// The RxNorm name of the semantic doseform group.
	SxdgName string `protobuf:"bytes,17,opt,name=sxdg_name,json=sxdgName,proto3" json:"sxdg_name,omitempty"`
	// The RxNorm prescribable name.
	PrescribableName string `protobuf:"bytes,18,opt,name=prescribable_name,json=prescribableName,proto3" json:"prescribable_name,omitempty"`
}

func (x *Medication) Reset() {
	*x = Medication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_messages_medication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Medication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medication) ProtoMessage() {}

func (x *Medication) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_messages_medication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medication.ProtoReflect.Descriptor instead.
func (*Medication) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_messages_medication_proto_rawDescGZIP(), []int{0}
}

func (x *Medication) GetMedicationId() string {
	if x != nil {
		return x.MedicationId
	}
	return ""
}

func (x *Medication) GetRxcui() string {
	if x != nil {
		return x.Rxcui
	}
	return ""
}

func (x *Medication) GetGenericRxcui() string {
	if x != nil {
		return x.GenericRxcui
	}
	return ""
}

func (x *Medication) GetTermType() string {
	if x != nil {
		return x.TermType
	}
	return ""
}

func (x *Medication) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Medication) GetRxNormDoseForm() string {
	if x != nil {
		return x.RxNormDoseForm
	}
	return ""
}

func (x *Medication) GetFullGenericName() string {
	if x != nil {
		return x.FullGenericName
	}
	return ""
}

func (x *Medication) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *Medication) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Medication) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *Medication) GetNewDoseForm() string {
	if x != nil {
		return x.NewDoseForm
	}
	return ""
}

func (x *Medication) GetStrength() string {
	if x != nil {
		return x.Strength
	}
	return ""
}

func (x *Medication) GetSuppressFor() string {
	if x != nil {
		return x.SuppressFor
	}
	return ""
}

func (x *Medication) GetDisplayNameSynonym() []string {
	if x != nil {
		return x.DisplayNameSynonym
	}
	return nil
}

func (x *Medication) GetSxdgRxcui() string {
	if x != nil {
		return x.SxdgRxcui
	}
	return ""
}

func (x *Medication) GetSxdgTermType() string {
	if x != nil {
		return x.SxdgTermType
	}
	return ""
}

func (x *Medication) GetSxdgName() string {
	if x != nil {
		return x.SxdgName
	}
	return ""
}

func (x *Medication) GetPrescribableName() string {
	if x != nil {
		return x.PrescribableName
	}
	return ""
}

var File_heyrenee_v1_messages_medication_proto protoreflect.FileDescriptor

var file_heyrenee_v1_messages_medication_proto_rawDesc = []byte{
	0x0a, 0x25, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf9, 0x04,
	0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x78, 0x63, 0x75, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x78, 0x63, 0x75, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x5f, 0x72, 0x78, 0x63, 0x75, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x78, 0x63, 0x75, 0x69, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x72, 0x78, 0x5f, 0x6e, 0x6f, 0x72,
	0x6d, 0x5f, 0x64, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x78, 0x4e, 0x6f, 0x72, 0x6d, 0x44, 0x6f, 0x73, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x75,
	0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x6f, 0x73,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x44, 0x6f, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x78,
	0x64, 0x67, 0x5f, 0x72, 0x78, 0x63, 0x75, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x78, 0x64, 0x67, 0x52, 0x78, 0x63, 0x75, 0x69, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x78, 0x64,
	0x67, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x78, 0x64, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x78, 0x64, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x78, 0x64, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x48, 0x65, 0x79, 0x52, 0x65, 0x6e, 0x65, 0x65,
	0x49, 0x6e, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_heyrenee_v1_messages_medication_proto_rawDescOnce sync.Once
	file_heyrenee_v1_messages_medication_proto_rawDescData = file_heyrenee_v1_messages_medication_proto_rawDesc
)

func file_heyrenee_v1_messages_medication_proto_rawDescGZIP() []byte {
	file_heyrenee_v1_messages_medication_proto_rawDescOnce.Do(func() {
		file_heyrenee_v1_messages_medication_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyrenee_v1_messages_medication_proto_rawDescData)
	})
	return file_heyrenee_v1_messages_medication_proto_rawDescData
}

var file_heyrenee_v1_messages_medication_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_heyrenee_v1_messages_medication_proto_goTypes = []interface{}{
	(*Medication)(nil), // 0: heyrenee.v1.messages.Medication
}
var file_heyrenee_v1_messages_medication_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_heyrenee_v1_messages_medication_proto_init() }
func file_heyrenee_v1_messages_medication_proto_init() {
	if File_heyrenee_v1_messages_medication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_heyrenee_v1_messages_medication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Medication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyrenee_v1_messages_medication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_heyrenee_v1_messages_medication_proto_goTypes,
		DependencyIndexes: file_heyrenee_v1_messages_medication_proto_depIdxs,
		MessageInfos:      file_heyrenee_v1_messages_medication_proto_msgTypes,
	}.Build()
	File_heyrenee_v1_messages_medication_proto = out.File
	file_heyrenee_v1_messages_medication_proto_rawDesc = nil
	file_heyrenee_v1_messages_medication_proto_goTypes = nil
	file_heyrenee_v1_messages_medication_proto_depIdxs = nil
}
