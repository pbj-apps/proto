// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: heyrenee/v1/messages/prescription.proto

package messages

import (
	_ "github.com/HeyReneeInc/proto/golang/heyrenee/v1/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrescriptionStatus int32

const (
	PrescriptionStatus_PRESCRIPTION_STATUS_UNSPECIFIED PrescriptionStatus = 0
	PrescriptionStatus_PRESCRIPTION_ACTIVE             PrescriptionStatus = 1
	PrescriptionStatus_PRESCRIPTION_INACTIVE           PrescriptionStatus = 2
)

// Enum value maps for PrescriptionStatus.
var (
	PrescriptionStatus_name = map[int32]string{
		0: "PRESCRIPTION_STATUS_UNSPECIFIED",
		1: "PRESCRIPTION_ACTIVE",
		2: "PRESCRIPTION_INACTIVE",
	}
	PrescriptionStatus_value = map[string]int32{
		"PRESCRIPTION_STATUS_UNSPECIFIED": 0,
		"PRESCRIPTION_ACTIVE":             1,
		"PRESCRIPTION_INACTIVE":           2,
	}
)

func (x PrescriptionStatus) Enum() *PrescriptionStatus {
	p := new(PrescriptionStatus)
	*p = x
	return p
}

func (x PrescriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrescriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_heyrenee_v1_messages_prescription_proto_enumTypes[0].Descriptor()
}

func (PrescriptionStatus) Type() protoreflect.EnumType {
	return &file_heyrenee_v1_messages_prescription_proto_enumTypes[0]
}

func (x PrescriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrescriptionStatus.Descriptor instead.
func (PrescriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_heyrenee_v1_messages_prescription_proto_rawDescGZIP(), []int{0}
}

type Prescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	// Types that are assignable to Medication:
	//	*Prescription_MedicationId
	//	*Prescription_MedicationMessage
	Medication     isPrescription_Medication `protobuf_oneof:"medication"`
	PrescriptionId string                    `protobuf:"bytes,4,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	// Types that are assignable to Provider:
	//	*Prescription_ProviderId
	//	*Prescription_ProviderMessage
	Provider                                isPrescription_Provider `protobuf_oneof:"provider"`
	ProviderInstructions                    string                  `protobuf:"bytes,7,opt,name=provider_instructions,json=providerInstructions,proto3" json:"provider_instructions,omitempty"`
	PatientInstructions                     string                  `protobuf:"bytes,8,opt,name=patient_instructions,json=patientInstructions,proto3" json:"patient_instructions,omitempty"`
	RefillCount                             int64                   `protobuf:"varint,9,opt,name=refill_count,json=refillCount,proto3" json:"refill_count,omitempty"`
	RefillFrequency                         *durationpb.Duration    `protobuf:"bytes,10,opt,name=refill_frequency,json=refillFrequency,proto3" json:"refill_frequency,omitempty"`
	PrescriptionStatus                      PrescriptionStatus      `protobuf:"varint,11,opt,name=prescription_status,json=prescriptionStatus,proto3,enum=heyrenee.v1.messages.PrescriptionStatus" json:"prescription_status,omitempty"`
	FirstMedicationRegimenStart             *timestamppb.Timestamp  `protobuf:"bytes,12,opt,name=first_medication_regimen_start,json=firstMedicationRegimenStart,proto3" json:"first_medication_regimen_start,omitempty"`
	MedicationRegimenDuration               *durationpb.Duration    `protobuf:"bytes,13,opt,name=medication_regimen_duration,json=medicationRegimenDuration,proto3" json:"medication_regimen_duration,omitempty"`
	MedicationDosesPerRegimen               int64                   `protobuf:"varint,14,opt,name=medication_doses_per_regimen,json=medicationDosesPerRegimen,proto3" json:"medication_doses_per_regimen,omitempty"`
	MedicationDoseDurationsFromRegimenStart []*durationpb.Duration  `protobuf:"bytes,15,rep,name=medication_dose_durations_from_regimen_start,json=medicationDoseDurationsFromRegimenStart,proto3" json:"medication_dose_durations_from_regimen_start,omitempty"`
}

func (x *Prescription) Reset() {
	*x = Prescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_messages_prescription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prescription) ProtoMessage() {}

func (x *Prescription) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_messages_prescription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prescription.ProtoReflect.Descriptor instead.
func (*Prescription) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_messages_prescription_proto_rawDescGZIP(), []int{0}
}

func (x *Prescription) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (m *Prescription) GetMedication() isPrescription_Medication {
	if m != nil {
		return m.Medication
	}
	return nil
}

func (x *Prescription) GetMedicationId() string {
	if x, ok := x.GetMedication().(*Prescription_MedicationId); ok {
		return x.MedicationId
	}
	return ""
}

func (x *Prescription) GetMedicationMessage() *Medication {
	if x, ok := x.GetMedication().(*Prescription_MedicationMessage); ok {
		return x.MedicationMessage
	}
	return nil
}

func (x *Prescription) GetPrescriptionId() string {
	if x != nil {
		return x.PrescriptionId
	}
	return ""
}

func (m *Prescription) GetProvider() isPrescription_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *Prescription) GetProviderId() string {
	if x, ok := x.GetProvider().(*Prescription_ProviderId); ok {
		return x.ProviderId
	}
	return ""
}

func (x *Prescription) GetProviderMessage() *Provider {
	if x, ok := x.GetProvider().(*Prescription_ProviderMessage); ok {
		return x.ProviderMessage
	}
	return nil
}

func (x *Prescription) GetProviderInstructions() string {
	if x != nil {
		return x.ProviderInstructions
	}
	return ""
}

func (x *Prescription) GetPatientInstructions() string {
	if x != nil {
		return x.PatientInstructions
	}
	return ""
}

func (x *Prescription) GetRefillCount() int64 {
	if x != nil {
		return x.RefillCount
	}
	return 0
}

func (x *Prescription) GetRefillFrequency() *durationpb.Duration {
	if x != nil {
		return x.RefillFrequency
	}
	return nil
}

func (x *Prescription) GetPrescriptionStatus() PrescriptionStatus {
	if x != nil {
		return x.PrescriptionStatus
	}
	return PrescriptionStatus_PRESCRIPTION_STATUS_UNSPECIFIED
}

func (x *Prescription) GetFirstMedicationRegimenStart() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstMedicationRegimenStart
	}
	return nil
}

func (x *Prescription) GetMedicationRegimenDuration() *durationpb.Duration {
	if x != nil {
		return x.MedicationRegimenDuration
	}
	return nil
}

func (x *Prescription) GetMedicationDosesPerRegimen() int64 {
	if x != nil {
		return x.MedicationDosesPerRegimen
	}
	return 0
}

func (x *Prescription) GetMedicationDoseDurationsFromRegimenStart() []*durationpb.Duration {
	if x != nil {
		return x.MedicationDoseDurationsFromRegimenStart
	}
	return nil
}

type isPrescription_Medication interface {
	isPrescription_Medication()
}

type Prescription_MedicationId struct {
	MedicationId string `protobuf:"bytes,2,opt,name=medication_id,json=medicationId,proto3,oneof"`
}

type Prescription_MedicationMessage struct {
	MedicationMessage *Medication `protobuf:"bytes,3,opt,name=medication_message,json=medicationMessage,proto3,oneof"`
}

func (*Prescription_MedicationId) isPrescription_Medication() {}

func (*Prescription_MedicationMessage) isPrescription_Medication() {}

type isPrescription_Provider interface {
	isPrescription_Provider()
}

type Prescription_ProviderId struct {
	ProviderId string `protobuf:"bytes,5,opt,name=provider_id,json=providerId,proto3,oneof"`
}

type Prescription_ProviderMessage struct {
	ProviderMessage *Provider `protobuf:"bytes,6,opt,name=provider_message,json=providerMessage,proto3,oneof"`
}

func (*Prescription_ProviderId) isPrescription_Provider() {}

func (*Prescription_ProviderMessage) isPrescription_Provider() {}

var File_heyrenee_v1_messages_prescription_proto protoreflect.FileDescriptor

var file_heyrenee_v1_messages_prescription_proto_rawDesc = []byte{
	0x0a, 0x27, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x68, 0x65, 0x79, 0x72, 0x65,
	0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x25, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x68, 0x65,
	0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x08, 0x0a,
	0x0c, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x12, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x44, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x59, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x12, 0x70,
	0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x5f, 0x0a, 0x1e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x59, 0x0a, 0x1b, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x19, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6d, 0x65, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x1c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x73, 0x65,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x19, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x6f, 0x73, 0x65, 0x73, 0x50, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x6e, 0x12, 0x78,
	0x0a, 0x2c, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x73,
	0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6d, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x27, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x73, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x67, 0x69,
	0x6d, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2a, 0x6d, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x52, 0x45, 0x53,
	0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x52, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x45, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x02, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x48, 0x65, 0x79, 0x52, 0x65, 0x6e, 0x65, 0x65, 0x49, 0x6e, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_heyrenee_v1_messages_prescription_proto_rawDescOnce sync.Once
	file_heyrenee_v1_messages_prescription_proto_rawDescData = file_heyrenee_v1_messages_prescription_proto_rawDesc
)

func file_heyrenee_v1_messages_prescription_proto_rawDescGZIP() []byte {
	file_heyrenee_v1_messages_prescription_proto_rawDescOnce.Do(func() {
		file_heyrenee_v1_messages_prescription_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyrenee_v1_messages_prescription_proto_rawDescData)
	})
	return file_heyrenee_v1_messages_prescription_proto_rawDescData
}

var file_heyrenee_v1_messages_prescription_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_heyrenee_v1_messages_prescription_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_heyrenee_v1_messages_prescription_proto_goTypes = []interface{}{
	(PrescriptionStatus)(0),       // 0: heyrenee.v1.messages.PrescriptionStatus
	(*Prescription)(nil),          // 1: heyrenee.v1.messages.Prescription
	(*Medication)(nil),            // 2: heyrenee.v1.messages.Medication
	(*Provider)(nil),              // 3: heyrenee.v1.messages.Provider
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_heyrenee_v1_messages_prescription_proto_depIdxs = []int32{
	2, // 0: heyrenee.v1.messages.Prescription.medication_message:type_name -> heyrenee.v1.messages.Medication
	3, // 1: heyrenee.v1.messages.Prescription.provider_message:type_name -> heyrenee.v1.messages.Provider
	4, // 2: heyrenee.v1.messages.Prescription.refill_frequency:type_name -> google.protobuf.Duration
	0, // 3: heyrenee.v1.messages.Prescription.prescription_status:type_name -> heyrenee.v1.messages.PrescriptionStatus
	5, // 4: heyrenee.v1.messages.Prescription.first_medication_regimen_start:type_name -> google.protobuf.Timestamp
	4, // 5: heyrenee.v1.messages.Prescription.medication_regimen_duration:type_name -> google.protobuf.Duration
	4, // 6: heyrenee.v1.messages.Prescription.medication_dose_durations_from_regimen_start:type_name -> google.protobuf.Duration
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_heyrenee_v1_messages_prescription_proto_init() }
func file_heyrenee_v1_messages_prescription_proto_init() {
	if File_heyrenee_v1_messages_prescription_proto != nil {
		return
	}
	file_heyrenee_v1_messages_medication_proto_init()
	file_heyrenee_v1_messages_provider_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_heyrenee_v1_messages_prescription_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_heyrenee_v1_messages_prescription_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Prescription_MedicationId)(nil),
		(*Prescription_MedicationMessage)(nil),
		(*Prescription_ProviderId)(nil),
		(*Prescription_ProviderMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyrenee_v1_messages_prescription_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_heyrenee_v1_messages_prescription_proto_goTypes,
		DependencyIndexes: file_heyrenee_v1_messages_prescription_proto_depIdxs,
		EnumInfos:         file_heyrenee_v1_messages_prescription_proto_enumTypes,
		MessageInfos:      file_heyrenee_v1_messages_prescription_proto_msgTypes,
	}.Build()
	File_heyrenee_v1_messages_prescription_proto = out.File
	file_heyrenee_v1_messages_prescription_proto_rawDesc = nil
	file_heyrenee_v1_messages_prescription_proto_goTypes = nil
	file_heyrenee_v1_messages_prescription_proto_depIdxs = nil
}
