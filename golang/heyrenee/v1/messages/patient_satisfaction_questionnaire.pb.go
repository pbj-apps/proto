// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: heyrenee/v1/messages/patient_satisfaction_questionnaire.proto

package messages

import (
	enums "github.com/HeyReneeInc/proto/golang/heyrenee/v1/enums"
	_ "github.com/HeyReneeInc/proto/golang/heyrenee/v1/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PatientSatisfactionQuestionnaire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId                          string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	PatientSatisfactionQuestionnaireId string                 `protobuf:"bytes,2,opt,name=patient_satisfaction_questionnaire_id,json=patientSatisfactionQuestionnaireId,proto3" json:"patient_satisfaction_questionnaire_id,omitempty"`
	QuestionnaireLanguage              enums.Language         `protobuf:"varint,3,opt,name=questionnaire_language,json=questionnaireLanguage,proto3,enum=heyrenee.v1.enums.Language" json:"questionnaire_language,omitempty"`
	DateTimeAnswered                   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_time_answered,json=dateTimeAnswered,proto3" json:"date_time_answered,omitempty"`
	HealthStatus                       int64                  `protobuf:"varint,5,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	MedicalCareSatisfaction            int64                  `protobuf:"varint,6,opt,name=medical_care_satisfaction,json=medicalCareSatisfaction,proto3" json:"medical_care_satisfaction,omitempty"`
	HealthSatisfaction                 int64                  `protobuf:"varint,7,opt,name=health_satisfaction,json=healthSatisfaction,proto3" json:"health_satisfaction,omitempty"`
	HeyReneeSatisfaction               int64                  `protobuf:"varint,8,opt,name=hey_renee_satisfaction,json=heyReneeSatisfaction,proto3" json:"hey_renee_satisfaction,omitempty"`
	PrimaryCareProviderSatisfaction    int64                  `protobuf:"varint,9,opt,name=primary_care_provider_satisfaction,json=primaryCareProviderSatisfaction,proto3" json:"primary_care_provider_satisfaction,omitempty"`
}

func (x *PatientSatisfactionQuestionnaire) Reset() {
	*x = PatientSatisfactionQuestionnaire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientSatisfactionQuestionnaire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientSatisfactionQuestionnaire) ProtoMessage() {}

func (x *PatientSatisfactionQuestionnaire) ProtoReflect() protoreflect.Message {
	mi := &file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientSatisfactionQuestionnaire.ProtoReflect.Descriptor instead.
func (*PatientSatisfactionQuestionnaire) Descriptor() ([]byte, []int) {
	return file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescGZIP(), []int{0}
}

func (x *PatientSatisfactionQuestionnaire) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *PatientSatisfactionQuestionnaire) GetPatientSatisfactionQuestionnaireId() string {
	if x != nil {
		return x.PatientSatisfactionQuestionnaireId
	}
	return ""
}

func (x *PatientSatisfactionQuestionnaire) GetQuestionnaireLanguage() enums.Language {
	if x != nil {
		return x.QuestionnaireLanguage
	}
	return enums.Language(0)
}

func (x *PatientSatisfactionQuestionnaire) GetDateTimeAnswered() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTimeAnswered
	}
	return nil
}

func (x *PatientSatisfactionQuestionnaire) GetHealthStatus() int64 {
	if x != nil {
		return x.HealthStatus
	}
	return 0
}

func (x *PatientSatisfactionQuestionnaire) GetMedicalCareSatisfaction() int64 {
	if x != nil {
		return x.MedicalCareSatisfaction
	}
	return 0
}

func (x *PatientSatisfactionQuestionnaire) GetHealthSatisfaction() int64 {
	if x != nil {
		return x.HealthSatisfaction
	}
	return 0
}

func (x *PatientSatisfactionQuestionnaire) GetHeyReneeSatisfaction() int64 {
	if x != nil {
		return x.HeyReneeSatisfaction
	}
	return 0
}

func (x *PatientSatisfactionQuestionnaire) GetPrimaryCareProviderSatisfaction() int64 {
	if x != nil {
		return x.PrimaryCareProviderSatisfaction
	}
	return 0
}

var File_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto protoreflect.FileDescriptor

var file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x1e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x04, 0x0a, 0x20, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x12, 0x23, 0x0a,
	0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x51, 0x0a, 0x25, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61,
	0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x22, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61,
	0x69, 0x72, 0x65, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x16, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x6e, 0x61, 0x69, 0x72, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x15, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x61, 0x69, 0x72,
	0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x10, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x65, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x68, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x6e,
	0x65, 0x65, 0x5f, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x68, 0x65, 0x79, 0x52, 0x65, 0x6e, 0x65, 0x65, 0x53,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x22, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x43, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x61, 0x74, 0x69,
	0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x48, 0x65, 0x79, 0x52, 0x65, 0x6e, 0x65, 0x65, 0x49,
	0x6e, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x68, 0x65, 0x79, 0x72, 0x65, 0x6e, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescOnce sync.Once
	file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescData = file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDesc
)

func file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescGZIP() []byte {
	file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescOnce.Do(func() {
		file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescData)
	})
	return file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDescData
}

var file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_goTypes = []interface{}{
	(*PatientSatisfactionQuestionnaire)(nil), // 0: heyrenee.v1.messages.PatientSatisfactionQuestionnaire
	(enums.Language)(0),                      // 1: heyrenee.v1.enums.Language
	(*timestamppb.Timestamp)(nil),            // 2: google.protobuf.Timestamp
}
var file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_depIdxs = []int32{
	1, // 0: heyrenee.v1.messages.PatientSatisfactionQuestionnaire.questionnaire_language:type_name -> heyrenee.v1.enums.Language
	2, // 1: heyrenee.v1.messages.PatientSatisfactionQuestionnaire.date_time_answered:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_init() }
func file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_init() {
	if File_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientSatisfactionQuestionnaire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_goTypes,
		DependencyIndexes: file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_depIdxs,
		MessageInfos:      file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_msgTypes,
	}.Build()
	File_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto = out.File
	file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_rawDesc = nil
	file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_goTypes = nil
	file_heyrenee_v1_messages_patient_satisfaction_questionnaire_proto_depIdxs = nil
}
