syntax = "proto3";

package heyrenee.v1;

option go_package = "github.com/HeyReneeInc/proto/golang/heyrenee/v1";

import "heyrenee/v1/messages/appointment.proto";
import "heyrenee/v1/options/auth.proto";

// AppointmentService
//
// The AppointmentService provides access to a Patient's Appointments. An Appointment represents a Patient's scheduled
// event with a Provider where medical care is provided.
service AppointmentService {
  // ListAppointments returns a list of Appointments for the specified Patient.
  rpc ListAppointments(ListAppointmentsRequest) returns (ListAppointmentsResponse) {
    option (heyrenee.v1.options.authenticated) = true;
  }
}

// ListAppointmentsRequest is the request message for the ListAppointments method.
message ListAppointmentsRequest {
  // The page token specifying the page of results. The initial call the ListAppointments should not supply this and
  // then subsequent calls should provide the page token in the previous response.
  string page_token = 1;
  // The total number of results to include in a single page of results. Minimum is 1, maximum is 100, and default is
  // 25.
  int64 page_count = 2;
  // The ID of the Patient to return Appointments for. Required.
  string patient_id = 3 [(heyrenee.v1.options.field_authorization) = FIELD_AUTHORIZATION_PATIENT];
  // The type of Appointments that should be returned.
  AppointmentType appointment_type = 4;
}

// ListAppointmentsResponse is the response message for the ListAppointments method.
message ListAppointmentsResponse {
  // The page token that should be used in a call to ListAppointments to retrieve the next page of results. If this is
  // empty then there are no more pages of results.
  string next_page_token = 1;
  // The list of Appointments returned.
  repeated heyrenee.v1.messages.Appointment appointments = 2;
}

// Specifies the type of Appointment.
enum AppointmentType {
  // No Appointment type specified.
  APPOINTMENT_TYPE_UNSPECIFIED = 0;
  // The Appointment is upcoming, that is it's scheduled datetime is >= the current datetime.
  APPOINTMENT_UPCOMING = 1;
}