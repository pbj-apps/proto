syntax = "proto3";

package heyrenee.v1;

option go_package = "github.com/HeyReneeInc/proto/golang/heyrenee/v1";

import "heyrenee/v1/messages/patient_provider.proto";
import "heyrenee/v1/options/auth.proto";

// ProviderService
//
// The Provider service provides operations on Provider resources as well as PatientProviders which represent a
// relationship between a Patient user and a Provider resource.
//
// URLs
//  Scratch: heyrenee-v1-8jiz6fu6.uc.gateway.dev
service ProviderService {
  // ProviderSuggest returns a list of ProviderSuggestions based on a partial search string. This should only be
  // used for autocomplete like features and not as a full fledged Provider search method.
  //
  // TODO(mitch): Use bi-directional streaming once client streaming supported by grpc-web
  // https://github.com/grpc/grpc-web/issues/24
  rpc ProviderSuggest(ProviderSuggestRequest) returns (ProviderSuggestResponse) {}

  // CreatePatientProvider creates a specified PatientProvider.
  rpc CreatePatientProvider(CreatePatientProviderRequest) returns (heyrenee.v1.messages.PatientProvider) {}
  // UpdatePatientProvider updates a specified PatientProvider.
  rpc UpdatePatientProvider(UpdatePatientProviderRequest) returns (heyrenee.v1.messages.PatientProvider) {}
  // ListPatientProviders lists PatientProviders for a specified Patient.
  rpc ListPatientProviders(ListPatientProvidersRequest) returns (ListPatientProvidersResponse) {}
}

// Request message for ProviderSuggest.
message ProviderSuggestRequest {
  // The partial text be used to generate ProviderSuggestions. Required.
  string partial_text = 1;
}

// Response message for ProviderSuggest.
message ProviderSuggestResponse {
  // The list of ProviderSuggestions.
  repeated ProviderSuggestion provider_suggestions = 1;
}

// A ProviderSuggestions represents a single Provider suggested as an autocompletion result for the partial text in a
// ProviderSuggestRequest.
message ProviderSuggestion {
  // The ID of the suggested Provider.
  string provider_id = 1;
  // The name of the Provider that should be displayed to the user in the list of suggestions.
  string display_name = 2;
}


// Request message for CreatePatientProvider.
message CreatePatientProviderRequest {
  // The PatientProvider to create. Required.
  heyrenee.v1.messages.PatientProvider patient_provider = 1;
}

// Request message for UpdatePatientProvider.
message UpdatePatientProviderRequest {
  // The PatientProvider to update. Required.
  heyrenee.v1.messages.PatientProvider patient_provider = 1;
}

// Request message for ListPatientProviders.
message ListPatientProvidersRequest {
  // The ID of the Patient to return PatientProviders for. Required.
  string patient_id = 1 [(heyrenee.v1.options.field_authorization) = FIELD_AUTHORIZATION_PATIENT];
  // The PatientProvider status. If specified, only PatientProviders with this status will be returned.
  heyrenee.v1.messages.PatientProviderStatus patient_provider_status = 2;
  // The PatientProvider type. If specified, only PatientProviders of this type will be returned.
  heyrenee.v1.messages.PatientProviderType patient_provider_type = 3;
}

// Response message for ListPatientProviders.
message ListPatientProvidersResponse {
  // The list of PatientProviders.
  repeated heyrenee.v1.messages.PatientProvider patient_providers = 1;
}
