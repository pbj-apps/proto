syntax = "proto3";

package heyrenee.v1;

option go_package = "github.com/HeyReneeInc/proto/golang/heyrenee/v1";

import "heyrenee/v1/options/auth.proto";
import "heyrenee/v1/messages/patient.proto";
import "heyrenee/v1/messages/caregiver.proto";
import "heyrenee/v1/messages/concierge.proto";

// UserService
//
// The UserService provides methods for the creation and management of HeyRenee users.
service UserService {
  // CreatePatient creates a new User with a Patient subuser. If the request is unauthenticated, a standalone user with
  // a Patient subuser will be created. If the request is authenticated by a Caregiver or Concierge subuser then the new
  // Patient subuser will be created with a PatientCaregiver or a PatientConcierge for the authenticated subuser.
  rpc CreatePatient(CreatePatientRequest) returns (heyrenee.v1.messages.Patient) {}
  // CreateCaregiver creates a new User with a Caregiver subuser.
  rpc CreateCaregiver(CreateCaregiverRequest) returns (heyrenee.v1.messages.Caregiver) {}
  // CreateConcierge creates a new User with a Concierge subuser.
  rpc CreateConcierge(CreateConciergeRequest) returns (heyrenee.v1.messages.Concierge) {}
}

message CreatePatientRequest {
  heyrenee.v1.messages.Patient patient = 1;
}

message CreateCaregiverRequest {
  heyrenee.v1.messages.Caregiver caregiver = 1;
}

message CreateConciergeRequest {
  heyrenee.v1.messages.Concierge concierge = 1;
}