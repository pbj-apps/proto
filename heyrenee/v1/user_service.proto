syntax = "proto3";

package heyrenee.v1;

option go_package = "github.com/HeyReneeInc/proto/golang/heyrenee/v1";

import "heyrenee/v1/options/auth.proto";
import "heyrenee/v1/messages/patient.proto";
import "heyrenee/v1/messages/caregiver.proto";

// UserService
//
// The UserService provides methods for the creation and management of HeyRenee users.
//
// URLs
//  Scratch: user-service-fugckz6xoq-uc.a.run.app:443
service UserService {
  // CreatePatient creates a new User with a Patient subuser. If the request is unauthenticated, a standalone user with
  // a Patient subuser will be created. If the request is authenticated by a Caregiver or Concierge subuser then the new
  // Patient subuser will be created with a PatientCaregiver or a PatientConcierge for the authenticated subuser.
  rpc CreatePatient(CreatePatientRequest) returns (heyrenee.v1.messages.Patient) {}
  // GetPatient retrieves a specified Patient subuser.
  rpc GetPatient(GetPatientRequest) returns (heyrenee.v1.messages.Patient) {
    option (heyrenee.v1.options.authenticated) = true;
  }
  // UpdatePatient updates a specified Patient subuser.
  rpc UpdatePatient(UpdatePatientRequest) returns (heyrenee.v1.messages.Patient) {
    option (heyrenee.v1.options.authenticated) = true;
  }

  // CreateCaregiver creates a new User with a Caregiver subuser.
  rpc CreateCaregiver(CreateCaregiverRequest) returns (heyrenee.v1.messages.Caregiver) {}
  // GetCaregiver retrieves a specified Caregiver subuser.
  rpc GetCaregiver(GetCaregiverRequest) returns (heyrenee.v1.messages.Caregiver) {
    option (heyrenee.v1.options.authenticated) = true;
  }
  // UpdateCaregiver updates a specified Caregiver subuser.
  rpc UpdateCaregiver(UpdateCaregiverRequest) returns (heyrenee.v1.messages.Caregiver) {
    option (heyrenee.v1.options.authenticated) = true;
  }
}

// Request message for CreatePatient.
message CreatePatientRequest {
  // The Patient to create. Required.
  heyrenee.v1.messages.Patient patient = 1;
  // The Patient's password. If not provided, a random password will be generated.
  string password = 2;
}

// Request message for GetPatient.
message GetPatientRequest {
  // The ID of the Patient to retrieve. Required.
  string patient_id = 1 [(heyrenee.v1.options.field_authorization) = FIELD_AUTHORIZATION_PATIENT];
}

// Request message for UpdatePatient.
message UpdatePatientRequest {
  // The Patient to update. Required.
  heyrenee.v1.messages.Patient patient = 1;
}


// Request message for CreateCaregiver.
message CreateCaregiverRequest {
  // The Caregiver to create. Required.
  heyrenee.v1.messages.Caregiver caregiver = 1;
  // Hash of the Caregiver's password. If not provided, a random password will be generated.
  string password = 2;
}

// Request message for GetCaregiver.
message GetCaregiverRequest {
  // The ID of the Caregiver to retrieve. Required.
  string caregiver_id = 1 [(heyrenee.v1.options.field_authorization) = FIELD_AUTHORIZATION_CAREGIVER];
}

// Request message for UpdateCaregiver.
message UpdateCaregiverRequest {
  // The Caregiver to update. Required.
  heyrenee.v1.messages.Caregiver caregiver = 1;
}
