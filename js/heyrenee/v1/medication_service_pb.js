// source: heyrenee/v1/medication_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var heyrenee_v1_messages_medication_dose_pb = require('../../heyrenee/v1/messages/medication_dose_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_medication_dose_pb);
var heyrenee_v1_messages_prescription_pb = require('../../heyrenee/v1/messages/prescription_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_prescription_pb);
var heyrenee_v1_messages_refill_pb = require('../../heyrenee/v1/messages/refill_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_refill_pb);
var heyrenee_v1_options_auth_pb = require('../../heyrenee/v1/options/auth_pb.js');
goog.object.extend(proto, heyrenee_v1_options_auth_pb);
goog.exportSymbol('proto.heyrenee.v1.CreatePrescriptionRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListMedicationDosesRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListMedicationDosesResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPrescriptionsRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPrescriptionsResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListRefillsRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListRefillsResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.MedicationSuggestRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.MedicationSuggestResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.MedicationSuggestion', null, global);
goog.exportSymbol('proto.heyrenee.v1.UpdatePrescriptionRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.MedicationSuggestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.MedicationSuggestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.MedicationSuggestRequest.displayName = 'proto.heyrenee.v1.MedicationSuggestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.MedicationSuggestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.MedicationSuggestResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.MedicationSuggestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.MedicationSuggestResponse.displayName = 'proto.heyrenee.v1.MedicationSuggestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.MedicationSuggestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.MedicationSuggestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.MedicationSuggestion.displayName = 'proto.heyrenee.v1.MedicationSuggestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePrescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePrescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePrescriptionRequest.displayName = 'proto.heyrenee.v1.CreatePrescriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.UpdatePrescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.UpdatePrescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.UpdatePrescriptionRequest.displayName = 'proto.heyrenee.v1.UpdatePrescriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPrescriptionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPrescriptionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPrescriptionsRequest.displayName = 'proto.heyrenee.v1.ListPrescriptionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPrescriptionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPrescriptionsResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPrescriptionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPrescriptionsResponse.displayName = 'proto.heyrenee.v1.ListPrescriptionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListMedicationDosesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListMedicationDosesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListMedicationDosesRequest.displayName = 'proto.heyrenee.v1.ListMedicationDosesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListMedicationDosesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListMedicationDosesResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListMedicationDosesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListMedicationDosesResponse.displayName = 'proto.heyrenee.v1.ListMedicationDosesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListRefillsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListRefillsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListRefillsRequest.displayName = 'proto.heyrenee.v1.ListRefillsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListRefillsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListRefillsResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListRefillsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListRefillsResponse.displayName = 'proto.heyrenee.v1.ListRefillsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.MedicationSuggestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.MedicationSuggestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.MedicationSuggestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.MedicationSuggestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partialText: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.MedicationSuggestRequest}
 */
proto.heyrenee.v1.MedicationSuggestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.MedicationSuggestRequest;
  return proto.heyrenee.v1.MedicationSuggestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.MedicationSuggestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.MedicationSuggestRequest}
 */
proto.heyrenee.v1.MedicationSuggestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartialText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.MedicationSuggestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.MedicationSuggestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.MedicationSuggestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.MedicationSuggestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartialText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string partial_text = 1;
 * @return {string}
 */
proto.heyrenee.v1.MedicationSuggestRequest.prototype.getPartialText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.MedicationSuggestRequest} returns this
 */
proto.heyrenee.v1.MedicationSuggestRequest.prototype.setPartialText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.MedicationSuggestResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.MedicationSuggestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.MedicationSuggestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.MedicationSuggestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.MedicationSuggestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    medicationSuggestionsList: jspb.Message.toObjectList(msg.getMedicationSuggestionsList(),
    proto.heyrenee.v1.MedicationSuggestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.MedicationSuggestResponse}
 */
proto.heyrenee.v1.MedicationSuggestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.MedicationSuggestResponse;
  return proto.heyrenee.v1.MedicationSuggestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.MedicationSuggestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.MedicationSuggestResponse}
 */
proto.heyrenee.v1.MedicationSuggestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.heyrenee.v1.MedicationSuggestion;
      reader.readMessage(value,proto.heyrenee.v1.MedicationSuggestion.deserializeBinaryFromReader);
      msg.addMedicationSuggestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.MedicationSuggestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.MedicationSuggestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.MedicationSuggestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.MedicationSuggestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMedicationSuggestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.heyrenee.v1.MedicationSuggestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MedicationSuggestion medication_suggestions = 1;
 * @return {!Array<!proto.heyrenee.v1.MedicationSuggestion>}
 */
proto.heyrenee.v1.MedicationSuggestResponse.prototype.getMedicationSuggestionsList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.MedicationSuggestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.heyrenee.v1.MedicationSuggestion, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.MedicationSuggestion>} value
 * @return {!proto.heyrenee.v1.MedicationSuggestResponse} returns this
*/
proto.heyrenee.v1.MedicationSuggestResponse.prototype.setMedicationSuggestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.MedicationSuggestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.MedicationSuggestion}
 */
proto.heyrenee.v1.MedicationSuggestResponse.prototype.addMedicationSuggestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.MedicationSuggestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.MedicationSuggestResponse} returns this
 */
proto.heyrenee.v1.MedicationSuggestResponse.prototype.clearMedicationSuggestionsList = function() {
  return this.setMedicationSuggestionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.MedicationSuggestion.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.MedicationSuggestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.MedicationSuggestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.MedicationSuggestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    medicationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.MedicationSuggestion}
 */
proto.heyrenee.v1.MedicationSuggestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.MedicationSuggestion;
  return proto.heyrenee.v1.MedicationSuggestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.MedicationSuggestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.MedicationSuggestion}
 */
proto.heyrenee.v1.MedicationSuggestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedicationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.MedicationSuggestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.MedicationSuggestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.MedicationSuggestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.MedicationSuggestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMedicationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string medication_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.MedicationSuggestion.prototype.getMedicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.MedicationSuggestion} returns this
 */
proto.heyrenee.v1.MedicationSuggestion.prototype.setMedicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.heyrenee.v1.MedicationSuggestion.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.MedicationSuggestion} returns this
 */
proto.heyrenee.v1.MedicationSuggestion.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePrescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePrescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePrescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePrescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    prescription: (f = msg.getPrescription()) && heyrenee_v1_messages_prescription_pb.Prescription.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePrescriptionRequest}
 */
proto.heyrenee.v1.CreatePrescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePrescriptionRequest;
  return proto.heyrenee.v1.CreatePrescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePrescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePrescriptionRequest}
 */
proto.heyrenee.v1.CreatePrescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_prescription_pb.Prescription;
      reader.readMessage(value,heyrenee_v1_messages_prescription_pb.Prescription.deserializeBinaryFromReader);
      msg.setPrescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePrescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePrescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePrescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePrescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrescription();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_prescription_pb.Prescription.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.Prescription prescription = 1;
 * @return {?proto.heyrenee.v1.messages.Prescription}
 */
proto.heyrenee.v1.CreatePrescriptionRequest.prototype.getPrescription = function() {
  return /** @type{?proto.heyrenee.v1.messages.Prescription} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_prescription_pb.Prescription, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.Prescription|undefined} value
 * @return {!proto.heyrenee.v1.CreatePrescriptionRequest} returns this
*/
proto.heyrenee.v1.CreatePrescriptionRequest.prototype.setPrescription = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePrescriptionRequest} returns this
 */
proto.heyrenee.v1.CreatePrescriptionRequest.prototype.clearPrescription = function() {
  return this.setPrescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePrescriptionRequest.prototype.hasPrescription = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.UpdatePrescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.UpdatePrescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    prescription: (f = msg.getPrescription()) && heyrenee_v1_messages_prescription_pb.Prescription.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.UpdatePrescriptionRequest}
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.UpdatePrescriptionRequest;
  return proto.heyrenee.v1.UpdatePrescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.UpdatePrescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.UpdatePrescriptionRequest}
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_prescription_pb.Prescription;
      reader.readMessage(value,heyrenee_v1_messages_prescription_pb.Prescription.deserializeBinaryFromReader);
      msg.setPrescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.UpdatePrescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.UpdatePrescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrescription();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_prescription_pb.Prescription.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.Prescription prescription = 1;
 * @return {?proto.heyrenee.v1.messages.Prescription}
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.prototype.getPrescription = function() {
  return /** @type{?proto.heyrenee.v1.messages.Prescription} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_prescription_pb.Prescription, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.Prescription|undefined} value
 * @return {!proto.heyrenee.v1.UpdatePrescriptionRequest} returns this
*/
proto.heyrenee.v1.UpdatePrescriptionRequest.prototype.setPrescription = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.UpdatePrescriptionRequest} returns this
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.prototype.clearPrescription = function() {
  return this.setPrescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.UpdatePrescriptionRequest.prototype.hasPrescription = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPrescriptionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPrescriptionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPrescriptionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPrescriptionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    prescriptionStatus: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPrescriptionsRequest}
 */
proto.heyrenee.v1.ListPrescriptionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPrescriptionsRequest;
  return proto.heyrenee.v1.ListPrescriptionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPrescriptionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPrescriptionsRequest}
 */
proto.heyrenee.v1.ListPrescriptionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    case 2:
      var value = /** @type {!proto.heyrenee.v1.messages.PrescriptionStatus} */ (reader.readEnum());
      msg.setPrescriptionStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPrescriptionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPrescriptionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPrescriptionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPrescriptionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrescriptionStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPrescriptionsRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPrescriptionsRequest} returns this
 */
proto.heyrenee.v1.ListPrescriptionsRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional messages.PrescriptionStatus prescription_status = 2;
 * @return {!proto.heyrenee.v1.messages.PrescriptionStatus}
 */
proto.heyrenee.v1.ListPrescriptionsRequest.prototype.getPrescriptionStatus = function() {
  return /** @type {!proto.heyrenee.v1.messages.PrescriptionStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.heyrenee.v1.messages.PrescriptionStatus} value
 * @return {!proto.heyrenee.v1.ListPrescriptionsRequest} returns this
 */
proto.heyrenee.v1.ListPrescriptionsRequest.prototype.setPrescriptionStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPrescriptionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPrescriptionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPrescriptionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPrescriptionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPrescriptionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    prescriptionsList: jspb.Message.toObjectList(msg.getPrescriptionsList(),
    heyrenee_v1_messages_prescription_pb.Prescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPrescriptionsResponse}
 */
proto.heyrenee.v1.ListPrescriptionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPrescriptionsResponse;
  return proto.heyrenee.v1.ListPrescriptionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPrescriptionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPrescriptionsResponse}
 */
proto.heyrenee.v1.ListPrescriptionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_prescription_pb.Prescription;
      reader.readMessage(value,heyrenee_v1_messages_prescription_pb.Prescription.deserializeBinaryFromReader);
      msg.addPrescriptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPrescriptionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPrescriptionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPrescriptionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPrescriptionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrescriptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_prescription_pb.Prescription.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.Prescription prescriptions = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.Prescription>}
 */
proto.heyrenee.v1.ListPrescriptionsResponse.prototype.getPrescriptionsList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.Prescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_prescription_pb.Prescription, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.Prescription>} value
 * @return {!proto.heyrenee.v1.ListPrescriptionsResponse} returns this
*/
proto.heyrenee.v1.ListPrescriptionsResponse.prototype.setPrescriptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.Prescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.Prescription}
 */
proto.heyrenee.v1.ListPrescriptionsResponse.prototype.addPrescriptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.Prescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPrescriptionsResponse} returns this
 */
proto.heyrenee.v1.ListPrescriptionsResponse.prototype.clearPrescriptionsList = function() {
  return this.setPrescriptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListMedicationDosesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListMedicationDosesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListMedicationDosesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListMedicationDosesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    prescriptionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListMedicationDosesRequest}
 */
proto.heyrenee.v1.ListMedicationDosesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListMedicationDosesRequest;
  return proto.heyrenee.v1.ListMedicationDosesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListMedicationDosesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListMedicationDosesRequest}
 */
proto.heyrenee.v1.ListMedicationDosesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrescriptionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListMedicationDosesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListMedicationDosesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListMedicationDosesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListMedicationDosesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrescriptionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string prescription_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListMedicationDosesRequest.prototype.getPrescriptionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListMedicationDosesRequest} returns this
 */
proto.heyrenee.v1.ListMedicationDosesRequest.prototype.setPrescriptionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListMedicationDosesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListMedicationDosesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListMedicationDosesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListMedicationDosesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListMedicationDosesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    medicationDosesList: jspb.Message.toObjectList(msg.getMedicationDosesList(),
    heyrenee_v1_messages_medication_dose_pb.MedicationDose.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListMedicationDosesResponse}
 */
proto.heyrenee.v1.ListMedicationDosesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListMedicationDosesResponse;
  return proto.heyrenee.v1.ListMedicationDosesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListMedicationDosesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListMedicationDosesResponse}
 */
proto.heyrenee.v1.ListMedicationDosesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_medication_dose_pb.MedicationDose;
      reader.readMessage(value,heyrenee_v1_messages_medication_dose_pb.MedicationDose.deserializeBinaryFromReader);
      msg.addMedicationDoses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListMedicationDosesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListMedicationDosesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListMedicationDosesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListMedicationDosesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMedicationDosesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_medication_dose_pb.MedicationDose.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.MedicationDose medication_doses = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.MedicationDose>}
 */
proto.heyrenee.v1.ListMedicationDosesResponse.prototype.getMedicationDosesList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.MedicationDose>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_medication_dose_pb.MedicationDose, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.MedicationDose>} value
 * @return {!proto.heyrenee.v1.ListMedicationDosesResponse} returns this
*/
proto.heyrenee.v1.ListMedicationDosesResponse.prototype.setMedicationDosesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.MedicationDose=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.MedicationDose}
 */
proto.heyrenee.v1.ListMedicationDosesResponse.prototype.addMedicationDoses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.MedicationDose, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListMedicationDosesResponse} returns this
 */
proto.heyrenee.v1.ListMedicationDosesResponse.prototype.clearMedicationDosesList = function() {
  return this.setMedicationDosesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListRefillsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListRefillsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListRefillsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListRefillsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    prescriptionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListRefillsRequest}
 */
proto.heyrenee.v1.ListRefillsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListRefillsRequest;
  return proto.heyrenee.v1.ListRefillsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListRefillsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListRefillsRequest}
 */
proto.heyrenee.v1.ListRefillsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrescriptionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListRefillsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListRefillsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListRefillsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListRefillsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrescriptionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string prescription_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListRefillsRequest.prototype.getPrescriptionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListRefillsRequest} returns this
 */
proto.heyrenee.v1.ListRefillsRequest.prototype.setPrescriptionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListRefillsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListRefillsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListRefillsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListRefillsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListRefillsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    refillsList: jspb.Message.toObjectList(msg.getRefillsList(),
    heyrenee_v1_messages_refill_pb.Refill.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListRefillsResponse}
 */
proto.heyrenee.v1.ListRefillsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListRefillsResponse;
  return proto.heyrenee.v1.ListRefillsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListRefillsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListRefillsResponse}
 */
proto.heyrenee.v1.ListRefillsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_refill_pb.Refill;
      reader.readMessage(value,heyrenee_v1_messages_refill_pb.Refill.deserializeBinaryFromReader);
      msg.addRefills(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListRefillsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListRefillsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListRefillsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListRefillsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_refill_pb.Refill.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.Refill refills = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.Refill>}
 */
proto.heyrenee.v1.ListRefillsResponse.prototype.getRefillsList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.Refill>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_refill_pb.Refill, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.Refill>} value
 * @return {!proto.heyrenee.v1.ListRefillsResponse} returns this
*/
proto.heyrenee.v1.ListRefillsResponse.prototype.setRefillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.Refill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.Refill}
 */
proto.heyrenee.v1.ListRefillsResponse.prototype.addRefills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.Refill, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListRefillsResponse} returns this
 */
proto.heyrenee.v1.ListRefillsResponse.prototype.clearRefillsList = function() {
  return this.setRefillsList([]);
};


goog.object.extend(exports, proto.heyrenee.v1);
