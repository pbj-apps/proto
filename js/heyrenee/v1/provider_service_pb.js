// source: heyrenee/v1/provider_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var heyrenee_v1_messages_patient_provider_pb = require('../../heyrenee/v1/messages/patient_provider_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_provider_pb);
var heyrenee_v1_messages_provider_pb = require('../../heyrenee/v1/messages/provider_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_provider_pb);
var heyrenee_v1_enums_specialty_pb = require('../../heyrenee/v1/enums/specialty_pb.js');
goog.object.extend(proto, heyrenee_v1_enums_specialty_pb);
var heyrenee_v1_options_auth_pb = require('../../heyrenee/v1/options/auth_pb.js');
goog.object.extend(proto, heyrenee_v1_options_auth_pb);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientProviderRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientProvidersRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientProvidersResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.SearchProvidersRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.SearchProvidersResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.UpdatePatientProviderRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.SearchProvidersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.SearchProvidersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.SearchProvidersRequest.displayName = 'proto.heyrenee.v1.SearchProvidersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.SearchProvidersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.SearchProvidersResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.SearchProvidersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.SearchProvidersResponse.displayName = 'proto.heyrenee.v1.SearchProvidersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientProviderRequest.displayName = 'proto.heyrenee.v1.CreatePatientProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.UpdatePatientProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.UpdatePatientProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.UpdatePatientProviderRequest.displayName = 'proto.heyrenee.v1.UpdatePatientProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientProvidersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientProvidersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientProvidersRequest.displayName = 'proto.heyrenee.v1.ListPatientProvidersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientProvidersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientProvidersResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientProvidersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientProvidersResponse.displayName = 'proto.heyrenee.v1.ListPatientProvidersResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.SearchProvidersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.SearchProvidersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.SearchProvidersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    specialty: jspb.Message.getFieldWithDefault(msg, 3, 0),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    state: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.SearchProvidersRequest}
 */
proto.heyrenee.v1.SearchProvidersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.SearchProvidersRequest;
  return proto.heyrenee.v1.SearchProvidersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.SearchProvidersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.SearchProvidersRequest}
 */
proto.heyrenee.v1.SearchProvidersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 3:
      var value = /** @type {!proto.heyrenee.v1.enums.Specialty} */ (reader.readEnum());
      msg.setSpecialty(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.SearchProvidersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.SearchProvidersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.SearchProvidersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpecialty();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.SearchProvidersRequest} returns this
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string last_name = 2;
 * @return {string}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.SearchProvidersRequest} returns this
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional enums.Specialty specialty = 3;
 * @return {!proto.heyrenee.v1.enums.Specialty}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.getSpecialty = function() {
  return /** @type {!proto.heyrenee.v1.enums.Specialty} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.heyrenee.v1.enums.Specialty} value
 * @return {!proto.heyrenee.v1.SearchProvidersRequest} returns this
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.setSpecialty = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.SearchProvidersRequest} returns this
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.SearchProvidersRequest} returns this
 */
proto.heyrenee.v1.SearchProvidersRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.SearchProvidersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.SearchProvidersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.SearchProvidersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.SearchProvidersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.SearchProvidersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    providersList: jspb.Message.toObjectList(msg.getProvidersList(),
    heyrenee_v1_messages_provider_pb.Provider.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.SearchProvidersResponse}
 */
proto.heyrenee.v1.SearchProvidersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.SearchProvidersResponse;
  return proto.heyrenee.v1.SearchProvidersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.SearchProvidersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.SearchProvidersResponse}
 */
proto.heyrenee.v1.SearchProvidersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_provider_pb.Provider;
      reader.readMessage(value,heyrenee_v1_messages_provider_pb.Provider.deserializeBinaryFromReader);
      msg.addProviders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.SearchProvidersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.SearchProvidersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.SearchProvidersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.SearchProvidersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvidersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_provider_pb.Provider.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.Provider providers = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.Provider>}
 */
proto.heyrenee.v1.SearchProvidersResponse.prototype.getProvidersList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.Provider>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_provider_pb.Provider, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.Provider>} value
 * @return {!proto.heyrenee.v1.SearchProvidersResponse} returns this
*/
proto.heyrenee.v1.SearchProvidersResponse.prototype.setProvidersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.Provider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.Provider}
 */
proto.heyrenee.v1.SearchProvidersResponse.prototype.addProviders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.Provider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.SearchProvidersResponse} returns this
 */
proto.heyrenee.v1.SearchProvidersResponse.prototype.clearProvidersList = function() {
  return this.setProvidersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientProvider: (f = msg.getPatientProvider()) && heyrenee_v1_messages_patient_provider_pb.PatientProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientProviderRequest;
  return proto.heyrenee.v1.CreatePatientProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_provider_pb.PatientProvider;
      reader.readMessage(value,heyrenee_v1_messages_patient_provider_pb.PatientProvider.deserializeBinaryFromReader);
      msg.setPatientProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_provider_pb.PatientProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientProvider patient_provider = 1;
 * @return {?proto.heyrenee.v1.messages.PatientProvider}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.getPatientProvider = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientProvider} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_provider_pb.PatientProvider, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientProvider|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest} returns this
*/
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.setPatientProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest} returns this
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.clearPatientProvider = function() {
  return this.setPatientProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.hasPatientProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.UpdatePatientProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.UpdatePatientProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientProvider: (f = msg.getPatientProvider()) && heyrenee_v1_messages_patient_provider_pb.PatientProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.UpdatePatientProviderRequest;
  return proto.heyrenee.v1.UpdatePatientProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.UpdatePatientProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_provider_pb.PatientProvider;
      reader.readMessage(value,heyrenee_v1_messages_patient_provider_pb.PatientProvider.deserializeBinaryFromReader);
      msg.setPatientProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.UpdatePatientProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.UpdatePatientProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_provider_pb.PatientProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientProvider patient_provider = 1;
 * @return {?proto.heyrenee.v1.messages.PatientProvider}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.getPatientProvider = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientProvider} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_provider_pb.PatientProvider, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientProvider|undefined} value
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest} returns this
*/
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.setPatientProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest} returns this
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.clearPatientProvider = function() {
  return this.setPatientProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.hasPatientProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientProvidersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientProvidersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    patientProviderStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patientProviderType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientProvidersRequest;
  return proto.heyrenee.v1.ListPatientProvidersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientProvidersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    case 2:
      var value = /** @type {!proto.heyrenee.v1.messages.PatientProviderStatus} */ (reader.readEnum());
      msg.setPatientProviderStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.heyrenee.v1.messages.PatientProviderType} */ (reader.readEnum());
      msg.setPatientProviderType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientProvidersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientProvidersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPatientProviderStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPatientProviderType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest} returns this
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional messages.PatientProviderStatus patient_provider_status = 2;
 * @return {!proto.heyrenee.v1.messages.PatientProviderStatus}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.getPatientProviderStatus = function() {
  return /** @type {!proto.heyrenee.v1.messages.PatientProviderStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientProviderStatus} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest} returns this
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.setPatientProviderStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional messages.PatientProviderType patient_provider_type = 3;
 * @return {!proto.heyrenee.v1.messages.PatientProviderType}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.getPatientProviderType = function() {
  return /** @type {!proto.heyrenee.v1.messages.PatientProviderType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientProviderType} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest} returns this
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.setPatientProviderType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientProvidersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientProvidersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientProvidersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientProvidersList: jspb.Message.toObjectList(msg.getPatientProvidersList(),
    heyrenee_v1_messages_patient_provider_pb.PatientProvider.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientProvidersResponse;
  return proto.heyrenee.v1.ListPatientProvidersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientProvidersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_provider_pb.PatientProvider;
      reader.readMessage(value,heyrenee_v1_messages_patient_provider_pb.PatientProvider.deserializeBinaryFromReader);
      msg.addPatientProviders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientProvidersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientProvidersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientProvidersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_provider_pb.PatientProvider.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientProvider patient_providers = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientProvider>}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.getPatientProvidersList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientProvider>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_provider_pb.PatientProvider, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientProvider>} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse} returns this
*/
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.setPatientProvidersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientProvider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientProvider}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.addPatientProviders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientProvider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse} returns this
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.clearPatientProvidersList = function() {
  return this.setPatientProvidersList([]);
};


goog.object.extend(exports, proto.heyrenee.v1);
