// source: heyrenee/v1/patient_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var heyrenee_v1_messages_patient_provider_pb = require('../../heyrenee/v1/messages/patient_provider_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_provider_pb);
var heyrenee_v1_messages_patient_caregiver_pb = require('../../heyrenee/v1/messages/patient_caregiver_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_caregiver_pb);
var heyrenee_v1_messages_patient_health_questionnaire_pb = require('../../heyrenee/v1/messages/patient_health_questionnaire_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_health_questionnaire_pb);
var heyrenee_v1_messages_patient_satisfaction_questionnaire_pb = require('../../heyrenee/v1/messages/patient_satisfaction_questionnaire_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_satisfaction_questionnaire_pb);
var heyrenee_v1_messages_patient_sdoh_questionnaire_pb = require('../../heyrenee/v1/messages/patient_sdoh_questionnaire_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_sdoh_questionnaire_pb);
var heyrenee_v1_messages_patient_assessment_pb = require('../../heyrenee/v1/messages/patient_assessment_pb.js');
goog.object.extend(proto, heyrenee_v1_messages_patient_assessment_pb);
var heyrenee_v1_options_auth_pb = require('../../heyrenee/v1/options/auth_pb.js');
goog.object.extend(proto, heyrenee_v1_options_auth_pb);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientAssessmentRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientCaregiverRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientProviderRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientAssessmentsRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientAssessmentsResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientCaregiversRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientCaregiversResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientProvidersRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientProvidersResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse', null, global);
goog.exportSymbol('proto.heyrenee.v1.UpdatePatientCaregiverRequest', null, global);
goog.exportSymbol('proto.heyrenee.v1.UpdatePatientProviderRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientProviderRequest.displayName = 'proto.heyrenee.v1.CreatePatientProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.UpdatePatientProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.UpdatePatientProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.UpdatePatientProviderRequest.displayName = 'proto.heyrenee.v1.UpdatePatientProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientProvidersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientProvidersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientProvidersRequest.displayName = 'proto.heyrenee.v1.ListPatientProvidersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientProvidersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientProvidersResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientProvidersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientProvidersResponse.displayName = 'proto.heyrenee.v1.ListPatientProvidersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientCaregiverRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientCaregiverRequest.displayName = 'proto.heyrenee.v1.CreatePatientCaregiverRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.UpdatePatientCaregiverRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.UpdatePatientCaregiverRequest.displayName = 'proto.heyrenee.v1.UpdatePatientCaregiverRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientCaregiversRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientCaregiversRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientCaregiversRequest.displayName = 'proto.heyrenee.v1.ListPatientCaregiversRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientCaregiversResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientCaregiversResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientCaregiversResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientCaregiversResponse.displayName = 'proto.heyrenee.v1.ListPatientCaregiversResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientAssessmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientAssessmentRequest.displayName = 'proto.heyrenee.v1.CreatePatientAssessmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientAssessmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientAssessmentsRequest.displayName = 'proto.heyrenee.v1.ListPatientAssessmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientAssessmentsResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientAssessmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientAssessmentsResponse.displayName = 'proto.heyrenee.v1.ListPatientAssessmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.displayName = 'proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.displayName = 'proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.displayName = 'proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.displayName = 'proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.displayName = 'proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.displayName = 'proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.displayName = 'proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.displayName = 'proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.repeatedFields_, null);
};
goog.inherits(proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.displayName = 'proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientProvider: (f = msg.getPatientProvider()) && heyrenee_v1_messages_patient_provider_pb.PatientProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientProviderRequest;
  return proto.heyrenee.v1.CreatePatientProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_provider_pb.PatientProvider;
      reader.readMessage(value,heyrenee_v1_messages_patient_provider_pb.PatientProvider.deserializeBinaryFromReader);
      msg.setPatientProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_provider_pb.PatientProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientProvider patient_provider = 1;
 * @return {?proto.heyrenee.v1.messages.PatientProvider}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.getPatientProvider = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientProvider} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_provider_pb.PatientProvider, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientProvider|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest} returns this
*/
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.setPatientProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientProviderRequest} returns this
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.clearPatientProvider = function() {
  return this.setPatientProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientProviderRequest.prototype.hasPatientProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.UpdatePatientProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.UpdatePatientProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientProvider: (f = msg.getPatientProvider()) && heyrenee_v1_messages_patient_provider_pb.PatientProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.UpdatePatientProviderRequest;
  return proto.heyrenee.v1.UpdatePatientProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.UpdatePatientProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_provider_pb.PatientProvider;
      reader.readMessage(value,heyrenee_v1_messages_patient_provider_pb.PatientProvider.deserializeBinaryFromReader);
      msg.setPatientProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.UpdatePatientProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.UpdatePatientProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientProvider();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_provider_pb.PatientProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientProvider patient_provider = 1;
 * @return {?proto.heyrenee.v1.messages.PatientProvider}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.getPatientProvider = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientProvider} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_provider_pb.PatientProvider, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientProvider|undefined} value
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest} returns this
*/
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.setPatientProvider = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.UpdatePatientProviderRequest} returns this
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.clearPatientProvider = function() {
  return this.setPatientProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.UpdatePatientProviderRequest.prototype.hasPatientProvider = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientProvidersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientProvidersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    patientProviderStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patientProviderType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientProvidersRequest;
  return proto.heyrenee.v1.ListPatientProvidersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientProvidersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    case 2:
      var value = /** @type {!proto.heyrenee.v1.messages.PatientProviderStatus} */ (reader.readEnum());
      msg.setPatientProviderStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.heyrenee.v1.messages.PatientProviderType} */ (reader.readEnum());
      msg.setPatientProviderType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientProvidersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientProvidersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPatientProviderStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPatientProviderType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest} returns this
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional messages.PatientProviderStatus patient_provider_status = 2;
 * @return {!proto.heyrenee.v1.messages.PatientProviderStatus}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.getPatientProviderStatus = function() {
  return /** @type {!proto.heyrenee.v1.messages.PatientProviderStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientProviderStatus} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest} returns this
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.setPatientProviderStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional messages.PatientProviderType patient_provider_type = 3;
 * @return {!proto.heyrenee.v1.messages.PatientProviderType}
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.getPatientProviderType = function() {
  return /** @type {!proto.heyrenee.v1.messages.PatientProviderType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientProviderType} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersRequest} returns this
 */
proto.heyrenee.v1.ListPatientProvidersRequest.prototype.setPatientProviderType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientProvidersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientProvidersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientProvidersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientProvidersList: jspb.Message.toObjectList(msg.getPatientProvidersList(),
    heyrenee_v1_messages_patient_provider_pb.PatientProvider.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientProvidersResponse;
  return proto.heyrenee.v1.ListPatientProvidersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientProvidersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_provider_pb.PatientProvider;
      reader.readMessage(value,heyrenee_v1_messages_patient_provider_pb.PatientProvider.deserializeBinaryFromReader);
      msg.addPatientProviders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientProvidersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientProvidersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientProvidersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientProvidersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_provider_pb.PatientProvider.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientProvider patient_providers = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientProvider>}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.getPatientProvidersList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientProvider>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_provider_pb.PatientProvider, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientProvider>} value
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse} returns this
*/
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.setPatientProvidersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientProvider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientProvider}
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.addPatientProviders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientProvider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientProvidersResponse} returns this
 */
proto.heyrenee.v1.ListPatientProvidersResponse.prototype.clearPatientProvidersList = function() {
  return this.setPatientProvidersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientCaregiverRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientCaregiverRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientCaregiver: (f = msg.getPatientCaregiver()) && heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientCaregiverRequest}
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientCaregiverRequest;
  return proto.heyrenee.v1.CreatePatientCaregiverRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientCaregiverRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientCaregiverRequest}
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver;
      reader.readMessage(value,heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.deserializeBinaryFromReader);
      msg.setPatientCaregiver(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientCaregiverRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientCaregiverRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientCaregiver();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientCaregiver patient_caregiver = 1;
 * @return {?proto.heyrenee.v1.messages.PatientCaregiver}
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.prototype.getPatientCaregiver = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientCaregiver} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientCaregiver|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientCaregiverRequest} returns this
*/
proto.heyrenee.v1.CreatePatientCaregiverRequest.prototype.setPatientCaregiver = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientCaregiverRequest} returns this
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.prototype.clearPatientCaregiver = function() {
  return this.setPatientCaregiver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientCaregiverRequest.prototype.hasPatientCaregiver = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.UpdatePatientCaregiverRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.UpdatePatientCaregiverRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientCaregiver: (f = msg.getPatientCaregiver()) && heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.UpdatePatientCaregiverRequest}
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.UpdatePatientCaregiverRequest;
  return proto.heyrenee.v1.UpdatePatientCaregiverRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.UpdatePatientCaregiverRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.UpdatePatientCaregiverRequest}
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver;
      reader.readMessage(value,heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.deserializeBinaryFromReader);
      msg.setPatientCaregiver(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.UpdatePatientCaregiverRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.UpdatePatientCaregiverRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientCaregiver();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientCaregiver patient_caregiver = 1;
 * @return {?proto.heyrenee.v1.messages.PatientCaregiver}
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.prototype.getPatientCaregiver = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientCaregiver} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientCaregiver|undefined} value
 * @return {!proto.heyrenee.v1.UpdatePatientCaregiverRequest} returns this
*/
proto.heyrenee.v1.UpdatePatientCaregiverRequest.prototype.setPatientCaregiver = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.UpdatePatientCaregiverRequest} returns this
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.prototype.clearPatientCaregiver = function() {
  return this.setPatientCaregiver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.UpdatePatientCaregiverRequest.prototype.hasPatientCaregiver = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientCaregiversRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientCaregiversRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientCaregiversRequest}
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientCaregiversRequest;
  return proto.heyrenee.v1.ListPatientCaregiversRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientCaregiversRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientCaregiversRequest}
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientCaregiversRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientCaregiversRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientCaregiversRequest} returns this
 */
proto.heyrenee.v1.ListPatientCaregiversRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientCaregiversResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientCaregiversResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientCaregiversList: jspb.Message.toObjectList(msg.getPatientCaregiversList(),
    heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientCaregiversResponse}
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientCaregiversResponse;
  return proto.heyrenee.v1.ListPatientCaregiversResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientCaregiversResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientCaregiversResponse}
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver;
      reader.readMessage(value,heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.deserializeBinaryFromReader);
      msg.addPatientCaregivers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientCaregiversResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientCaregiversResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientCaregiversList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientCaregiver patient_caregivers = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientCaregiver>}
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.prototype.getPatientCaregiversList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientCaregiver>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_caregiver_pb.PatientCaregiver, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientCaregiver>} value
 * @return {!proto.heyrenee.v1.ListPatientCaregiversResponse} returns this
*/
proto.heyrenee.v1.ListPatientCaregiversResponse.prototype.setPatientCaregiversList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientCaregiver=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientCaregiver}
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.prototype.addPatientCaregivers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientCaregiver, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientCaregiversResponse} returns this
 */
proto.heyrenee.v1.ListPatientCaregiversResponse.prototype.clearPatientCaregiversList = function() {
  return this.setPatientCaregiversList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientAssessmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientAssessmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientAssessment: (f = msg.getPatientAssessment()) && heyrenee_v1_messages_patient_assessment_pb.PatientAssessment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientAssessmentRequest}
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientAssessmentRequest;
  return proto.heyrenee.v1.CreatePatientAssessmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientAssessmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientAssessmentRequest}
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_assessment_pb.PatientAssessment;
      reader.readMessage(value,heyrenee_v1_messages_patient_assessment_pb.PatientAssessment.deserializeBinaryFromReader);
      msg.setPatientAssessment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientAssessmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientAssessmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientAssessment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_assessment_pb.PatientAssessment.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientAssessment patient_assessment = 1;
 * @return {?proto.heyrenee.v1.messages.PatientAssessment}
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.prototype.getPatientAssessment = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientAssessment} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_assessment_pb.PatientAssessment, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientAssessment|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientAssessmentRequest} returns this
*/
proto.heyrenee.v1.CreatePatientAssessmentRequest.prototype.setPatientAssessment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientAssessmentRequest} returns this
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.prototype.clearPatientAssessment = function() {
  return this.setPatientAssessment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientAssessmentRequest.prototype.hasPatientAssessment = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientAssessmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientAssessmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsRequest}
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientAssessmentsRequest;
  return proto.heyrenee.v1.ListPatientAssessmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientAssessmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsRequest}
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientAssessmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientAssessmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsRequest} returns this
 */
proto.heyrenee.v1.ListPatientAssessmentsRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientAssessmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientAssessmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientAssessmentsList: jspb.Message.toObjectList(msg.getPatientAssessmentsList(),
    heyrenee_v1_messages_patient_assessment_pb.PatientAssessment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsResponse}
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientAssessmentsResponse;
  return proto.heyrenee.v1.ListPatientAssessmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientAssessmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsResponse}
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_assessment_pb.PatientAssessment;
      reader.readMessage(value,heyrenee_v1_messages_patient_assessment_pb.PatientAssessment.deserializeBinaryFromReader);
      msg.addPatientAssessments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientAssessmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientAssessmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientAssessmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_assessment_pb.PatientAssessment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientAssessment patient_assessments = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientAssessment>}
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.prototype.getPatientAssessmentsList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientAssessment>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_assessment_pb.PatientAssessment, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientAssessment>} value
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsResponse} returns this
*/
proto.heyrenee.v1.ListPatientAssessmentsResponse.prototype.setPatientAssessmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientAssessment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientAssessment}
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.prototype.addPatientAssessments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientAssessment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientAssessmentsResponse} returns this
 */
proto.heyrenee.v1.ListPatientAssessmentsResponse.prototype.clearPatientAssessmentsList = function() {
  return this.setPatientAssessmentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientSatisfactionQuestionnaire: (f = msg.getPatientSatisfactionQuestionnaire()) && heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest}
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest;
  return proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest}
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire;
      reader.readMessage(value,heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire.deserializeBinaryFromReader);
      msg.setPatientSatisfactionQuestionnaire(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientSatisfactionQuestionnaire();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientSatisfactionQuestionnaire patient_satisfaction_questionnaire = 1;
 * @return {?proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire}
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.prototype.getPatientSatisfactionQuestionnaire = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest} returns this
*/
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.prototype.setPatientSatisfactionQuestionnaire = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest} returns this
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.prototype.clearPatientSatisfactionQuestionnaire = function() {
  return this.setPatientSatisfactionQuestionnaire(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientSatisfactionQuestionnaireRequest.prototype.hasPatientSatisfactionQuestionnaire = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest;
  return proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest} returns this
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientSatisfactionQuestionnairesList: jspb.Message.toObjectList(msg.getPatientSatisfactionQuestionnairesList(),
    heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse;
  return proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire;
      reader.readMessage(value,heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire.deserializeBinaryFromReader);
      msg.addPatientSatisfactionQuestionnaires(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientSatisfactionQuestionnairesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientSatisfactionQuestionnaire patient_satisfaction_questionnaires = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire>}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.prototype.getPatientSatisfactionQuestionnairesList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_satisfaction_questionnaire_pb.PatientSatisfactionQuestionnaire, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire>} value
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse} returns this
*/
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.prototype.setPatientSatisfactionQuestionnairesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire}
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.prototype.addPatientSatisfactionQuestionnaires = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientSatisfactionQuestionnaire, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse} returns this
 */
proto.heyrenee.v1.ListPatientSatisfactionQuestionnairesResponse.prototype.clearPatientSatisfactionQuestionnairesList = function() {
  return this.setPatientSatisfactionQuestionnairesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientHealthQuestionnaire: (f = msg.getPatientHealthQuestionnaire()) && heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest}
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest;
  return proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest}
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire;
      reader.readMessage(value,heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire.deserializeBinaryFromReader);
      msg.setPatientHealthQuestionnaire(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientHealthQuestionnaire();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientHealthQuestionnaire patient_health_questionnaire = 1;
 * @return {?proto.heyrenee.v1.messages.PatientHealthQuestionnaire}
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.prototype.getPatientHealthQuestionnaire = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientHealthQuestionnaire} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientHealthQuestionnaire|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest} returns this
*/
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.prototype.setPatientHealthQuestionnaire = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest} returns this
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.prototype.clearPatientHealthQuestionnaire = function() {
  return this.setPatientHealthQuestionnaire(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientHealthQuestionnaireRequest.prototype.hasPatientHealthQuestionnaire = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest;
  return proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest} returns this
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientHealthQuestionnairesList: jspb.Message.toObjectList(msg.getPatientHealthQuestionnairesList(),
    heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse;
  return proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire;
      reader.readMessage(value,heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire.deserializeBinaryFromReader);
      msg.addPatientHealthQuestionnaires(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientHealthQuestionnairesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientHealthQuestionnaire patient_health_questionnaires = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientHealthQuestionnaire>}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.prototype.getPatientHealthQuestionnairesList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientHealthQuestionnaire>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_health_questionnaire_pb.PatientHealthQuestionnaire, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientHealthQuestionnaire>} value
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse} returns this
*/
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.prototype.setPatientHealthQuestionnairesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientHealthQuestionnaire=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientHealthQuestionnaire}
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.prototype.addPatientHealthQuestionnaires = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientHealthQuestionnaire, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse} returns this
 */
proto.heyrenee.v1.ListPatientHealthQuestionnairesResponse.prototype.clearPatientHealthQuestionnairesList = function() {
  return this.setPatientHealthQuestionnairesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientSdohQuestionnaire: (f = msg.getPatientSdohQuestionnaire()) && heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest}
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest;
  return proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest}
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire;
      reader.readMessage(value,heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire.deserializeBinaryFromReader);
      msg.setPatientSdohQuestionnaire(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientSdohQuestionnaire();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire.serializeBinaryToWriter
    );
  }
};


/**
 * optional messages.PatientSdohQuestionnaire patient_sdoh_questionnaire = 1;
 * @return {?proto.heyrenee.v1.messages.PatientSdohQuestionnaire}
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.prototype.getPatientSdohQuestionnaire = function() {
  return /** @type{?proto.heyrenee.v1.messages.PatientSdohQuestionnaire} */ (
    jspb.Message.getWrapperField(this, heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire, 1));
};


/**
 * @param {?proto.heyrenee.v1.messages.PatientSdohQuestionnaire|undefined} value
 * @return {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest} returns this
*/
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.prototype.setPatientSdohQuestionnaire = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest} returns this
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.prototype.clearPatientSdohQuestionnaire = function() {
  return this.setPatientSdohQuestionnaire(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.heyrenee.v1.CreatePatientSdohQuestionnaireRequest.prototype.hasPatientSdohQuestionnaire = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest;
  return proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string patient_id = 1;
 * @return {string}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.prototype.getPatientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest} returns this
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesRequest.prototype.setPatientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    patientSdohQuestionnairesList: jspb.Message.toObjectList(msg.getPatientSdohQuestionnairesList(),
    heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse;
  return proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire;
      reader.readMessage(value,heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire.deserializeBinaryFromReader);
      msg.addPatientSdohQuestionnaires(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPatientSdohQuestionnairesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire.serializeBinaryToWriter
    );
  }
};


/**
 * repeated messages.PatientSdohQuestionnaire patient_sdoh_questionnaires = 1;
 * @return {!Array<!proto.heyrenee.v1.messages.PatientSdohQuestionnaire>}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.prototype.getPatientSdohQuestionnairesList = function() {
  return /** @type{!Array<!proto.heyrenee.v1.messages.PatientSdohQuestionnaire>} */ (
    jspb.Message.getRepeatedWrapperField(this, heyrenee_v1_messages_patient_sdoh_questionnaire_pb.PatientSdohQuestionnaire, 1));
};


/**
 * @param {!Array<!proto.heyrenee.v1.messages.PatientSdohQuestionnaire>} value
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse} returns this
*/
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.prototype.setPatientSdohQuestionnairesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.heyrenee.v1.messages.PatientSdohQuestionnaire=} opt_value
 * @param {number=} opt_index
 * @return {!proto.heyrenee.v1.messages.PatientSdohQuestionnaire}
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.prototype.addPatientSdohQuestionnaires = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.heyrenee.v1.messages.PatientSdohQuestionnaire, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse} returns this
 */
proto.heyrenee.v1.ListPatientSdohQuestionnairesResponse.prototype.clearPatientSdohQuestionnairesList = function() {
  return this.setPatientSdohQuestionnairesList([]);
};


goog.object.extend(exports, proto.heyrenee.v1);
